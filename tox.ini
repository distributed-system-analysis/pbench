[tox]
minversion = 3.5.0
skipdist = True
skip_missing_interpreters = True
isolated_build = True
toxworkdir = {env:TOXWORKDIR:/tmp/{env:USER}/tox}
envlist = lint
          py3-agent
          datalog
          postprocess
          tool-scripts
          util-scripts
          bench-scripts
          py3-server
          server

[testenv]
usedevelop = True
install_command = pip install --no-cache-dir --progress-bar off --prefix={envdir} {opts} {packages}
passenv =
    PY_COLORS
    NO_COLORS
    TERM
    USER
setenv =
    VIRTUAL_ENV = {envdir}
    XDG_CACHE_HOME = {envdir}
    SKIP_GENERATE_AUTHORS = 1
    SKIP_WRITE_GIT_CHANGELOG = 1
commands_pre =
    {toxinidir}/utils/detox {envdir}
whitelist_externals =
    bash
    rm
    find
    env

[testenv:server]
description = Runs all non-Python3-based server unit/functional tests
passenv = PBENCH_UNITTEST_SERVER_MODE
deps =
    -r{toxinidir}/server/requirements.txt
    -r{toxinidir}/server/test-requirements.txt
commands =
    bash -c "./server/bin/unittests {posargs}"

[testenv:datalog]
description = Runs all non-Python3-based agent tool-scripts/datalog unit/functional tests
deps =
    -r{toxinidir}/agent/requirements.txt
    -r{toxinidir}/agent/test-requirements.txt
commands =
    bash -c "./agent/tool-scripts/datalog/unittests {posargs}"

[testenv:postprocess]
description = Runs all non-Python3-based agent tool-scripts/postprocess unit/functional tests
deps =
    -r{toxinidir}/agent/test-requirements.txt
commands =
    bash -c "./agent/tool-scripts/postprocess/unittests {posargs}"

[testenv:tool-scripts]
description = Runs all non-Python3-based agent tool-scripts unit/functional tests
deps =
    -r{toxinidir}/agent/test-requirements.txt
commands =
    bash -c "./agent/tool-scripts/unittests {posargs}"

[testenv:util-scripts]
description = Runs all non-Python3-based agent util-scripts unit/functional tests
deps =
    -r{toxinidir}/agent/requirements.txt
    -r{toxinidir}/agent/test-requirements.txt
commands =
    bash -c "./agent/util-scripts/unittests {posargs}"

[testenv:bench-scripts]
description = Runs all non-Python3-based agent bench-scripts unit/functional tests
deps =
    -r{toxinidir}/agent/requirements.txt
    -r{toxinidir}/agent/test-requirements.txt
commands =
    bash -c "./agent/bench-scripts/unittests {posargs}"

[testenv:py3-server]
description = Runs all Python3-based server unit and functional tests
deps =
    -r{toxinidir}/server/requirements.txt
    -r{toxinidir}/server/test-requirements.txt
commands =
    pytest --cov --cov-append \
      --cov-report html:{envdir}/cov/html {posargs} \
      ./lib/pbench/test/unit/common \
      ./lib/pbench/test/unit/server \
      ./lib/pbench/test/functional \
      ./server/bin/test/unit

[testenv:py3-agent]
description = Runs all Python3-based agent unit and functional tests
deps =
    -r{toxinidir}/agent/requirements.txt
    -r{toxinidir}/agent/test-requirements.txt
commands =
    pytest --cov --cov-append \
      --cov-report html:{envdir}/cov/html {posargs} \
      ./lib/pbench/test/unit/common \
      ./lib/pbench/test/unit/agent \
      ./lib/pbench/test/functional

[testenv:lint]
description = Runs all linting tasks
commands =
    black --check .
    flake8 .
deps = -r{toxinidir}/lint-requirements.txt
skip_install = true
usedevelop = false

[testenv:jenkins-unittests]
description = Runs all external tests from one tox environment
commands =
    bash -c "./jenkins/run-unittests {envdir}"

[testenv:jenkins-pytests]
description = Runs all external tests from one tox environment
commands =
    bash -c "./jenkins/run-pytests {envdir}"
