[tox]
minversion = 3.5.0
skipsdist = True
skip_missing_interpreters = True
isolated_build = True
toxworkdir = {env:TOXWORKDIR:/tmp/{env:USER}/tox}
envlist = lint,agent,py3-server,server

[testenv]
usedevelop = True
install_command = pip install --no-cache-dir --progress-bar off --prefix={envdir} {opts} {packages}
passenv =
    PY_COLORS
    NO_COLORS
    TERM
    USER
setenv =
    VIRTUAL_ENV = {envdir}
    XDG_CACHE_HOME = {envdir}
    SKIP_GENERATE_AUTHORS = 1
    SKIP_WRITE_GIT_CHANGELOG = 1
commands_pre =
    {toxinidir}/utils/detox {envdir}
whitelist_externals =
    bash
    rm
    find
    env

[testenv:server]
description = Runs all server unit/functional tests
basepython = python3.9
passenv = PBENCH_UNITTEST_SERVER_MODE
deps =
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/server/requirements.txt
commands =
    bash -c "./server/bin/unittests {posargs}"

[testenv:agent]
description = Runs all agent unit/functional tests
basepython = python3.6
deps =
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/agent/test-requirements.txt
commands =
    bash -c "./agent/run-unittests"

[testenv:py3-server]
description = Runs all Python3-based server unit and functional tests
basepython = python3.9
setenv =
    PYTHONPATH = {env:PYTHONPATH:}:{toxinidir}/server/lib:{toxinidir}/lib
deps =
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/server/test-requirements.txt
    -r{toxinidir}/server/requirements.txt
commands =
    pytest {posargs} ./server/lib/pbench/test/unit

[testenv:lint]
description = Runs all linting tasks
commands =
    black --check .
    flake8 .
deps = -r{toxinidir}/lint-requirements.txt
skip_install = true
usedevelop = false

[testenv:jenkins-unittests]
description = Runs all tests under the environment provided by Jenkins
commands =
    bash -c "./jenkins/run-unittests {envdir}"
