[DEFAULT]
versions = 001 002

###########################################################################
# these should be overridden in the env-specific config file.
mailto = admins@example.com
default-host = perf.example.com
#
###########################################################################

default-user = pbench
default-group = pbench
default-deploy-dir = /opt/pbench-server

default-script-dir = %(default-deploy-dir)s/bin
default-lib-dir = %(default-deploy-dir)s/lib
default-crontab-dir = %(default-lib-dir)s/crontab
default-lock-dir = %(default-lib-dir)s/locks

deploy-script-dir = %(default-script-dir)s
deploy-lib-dir = %(default-lib-dir)s
deploy-crontab-dir=%(default-crontab-dir)s
deploy-lock-dir = %(default-lock-dir)s

## See pbench-server-setup documentation for filesystem setup
deploy-pbench-dir = /pbench
# this is a historical faux pas
deploy-archive-dir= %(deploy-pbench-dir)s/archive/fs-version-001

deploy-unpack-dir = %(deploy-pbench-dir)s/public_html/incoming
deploy-pbench-local-dir = /pbench-local
deploy-pbench-logs-dir = %(deploy-pbench-local-dir)s/logs
deploy-pbench-backup-dir = %(deploy-pbench-local-dir)s/archive.backup
deploy-pbench-tmp-dir = %(deploy-pbench-local-dir)s/tmp

deploy-pbench-receive-dir-001 = %(deploy-pbench-local-dir)s/fs-version-001/pbench-move-results-receive
deploy-pbench-receive-dir-002 = %(deploy-pbench-local-dir)s/fs-version-002/pbench-move-results-receive

[pbench-files]
pbench-top-dir = %(deploy-pbench-dir)s
pbench-backup-dir = %(deploy-pbench-backup-dir)s
pbench-logs-dir = %(deploy-pbench-logs-dir)s
pbench-tmp-dir = %(deploy-pbench-tmp-dir)s
pbench-unpack-dir = %(deploy-unpack-dir)s

###########################################################################
## deployment section
###########################################################################
[pbench-server]
user=%(default-user)s
group=%(default-group)s
install-dir = %(default-deploy-dir)s
script-dir = %(deploy-script-dir)s
archive-dir = %(deploy-archive-dir)s
quarantine-dir = %(deploy-pbench-local-dir)s/quarantine
receive-dir-001 = %(deploy-pbench-receive-dir-001)s
receive-dir-002 = %(deploy-pbench-receive-dir-002)s
crontabdir = %(deploy-crontab-dir)s
roles = pbench-prep pbench-results pbench-backup

# when a tarball comes in to this server, what processing should it undergo?
# production-like servers do at least the first two and possibly more of these:
#dispatch-states = TO-UNPACK, TO-INDEX, TO-COPY-SOS, TO-BACKUP

# satellite servers do these:
#dispatch-states = TO-UNPACK, TO-SYNC

# we need to install some stuff in the apache document root
# so we either get it directly or look in the config file.
# N.B. Different distros use different config files.
# The following works on Fedora, RHEL, CentOS.
[apache]
# configfile = /etc/httpd/conf/httpd.conf
documentroot = /var/www/html

# this *has* to agree with the setting in the pbench-agent config file
[results]
webserver = %(default-host)s
host_info_url = http://%(webserver)s/pbench-results-host-info.versioned/pbench-results-host-info.URL

###########################################################################
# crontab roles
[pbench-prep]
host = %(default-host)s
shims = prep-shim-001 prep-shim-002
tasks = pbench-prep-task

[prep-shim-001]
shim-version = 001

[prep-shim-002]
shim-version = 002

[pbench-results]
host = %(default-host)s
mailfrom = %(default-user)s@%(host)s
tasks = pbench-dispatch, pbench-unpack-tarballs, pbench-copy-sosreports, pbench-edit-prefixes, pbench-index

[pbench-backup]
host = %(default-host)s
mailfrom = %(default-user)s@%(host)s
tasks = pbench-backup-tarballs, pbench-verify-backup-tarballs

###########################################################################
# crontab tasks
[pbench-prep-task]
# this is a template that is expanded by pbench-server-activate-create-crontab
crontab = * * * * *  flock -n %(deploy-lock-dir)s/pbench-prep-$SHIM_VERSION.lock %(deploy-script-dir)s/pbench-server-prep-shim-$SHIM_VERSION

[pbench-dispatch]
crontab = * * * * *  flock -n %(deploy-lock-dir)s/pbench-dispatch.lock %(deploy-script-dir)s/pbench-dispatch

[pbench-backup-tarballs]
crontab = 41 4 * * *  flock -n %(deploy-lock-dir)s/pbench-backup-tarballs.lock %(deploy-script-dir)s/pbench-backup-tarballs  %(deploy-pbench-backup-dir)s

[pbench-verify-backup-tarballs]
crontab = 59 4 * * Sunday  flock -n %(deploy-lock-dir)s/pbench-verify-backup-tarballs.lock %(deploy-script-dir)s/pbench-verify-backup-tarballs %(deploy-archive-dir)s %(deploy-pbench-backup-dir)s

[pbench-unpack-tarballs]
crontab = * * * * *  flock -n %(deploy-lock-dir)s/pbench-unpack-tarballs.lock %(deploy-script-dir)s/pbench-unpack-tarballs %(deploy-unpack-dir)s

[pbench-move-unpacked]
njobs = 1
crontab = * * * * *  flock -n %(deploy-lock-dir)s/pbench-move-unpacked.lock %(deploy-script-dir)s/pbench-move-unpacked %(deploy-unpack-dir)s

[pbench-copy-sosreports]
crontab = 41 * * * *  flock -n %(deploy-lock-dir)s/pbench-copy-sosreports.lock %(deploy-script-dir)s/pbench-copy-sosreports

[pbench-edit-prefixes]
crontab = * * * * *  flock -n %(deploy-lock-dir)s/pbench-edit-prefixes.lock %(deploy-script-dir)s/pbench-edit-prefixes 

[pbench-index]
crontab = * * * * *  flock -n %(deploy-lock-dir)s/pbench-index.lock %(deploy-script-dir)s/pbench-index

[pbench-sync]
# this is a template that is expanded by pbench-server-activate-create-crontab
crontab = * * * * * flock -n %(deploy-lock-dir)s/$SATELLITE_LOCK %(deploy-script-dir)s/pbench-sync-satellite $SATELLITE_PREFIX $SATELLITE_HOST $SATELLITE_ARCHIVE
