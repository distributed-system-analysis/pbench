[DEFAULT]

###########################################################################
# These should be overridden in the env-specific config file.
default-host = pbench.example.com
#
###########################################################################

default-user = pbench
default-group = pbench

default-mailfrom = %(default-user)s@%(default-host)s
default-mailto = admins@example.com

default-deploy-dir = /opt/pbench-server

install-dir = %(default-deploy-dir)s
script-dir = %(default-deploy-dir)s/bin
lib-dir = %(default-deploy-dir)s/lib
crontab-dir = %(lib-dir)s/crontab
lock-dir = %(lib-dir)s/locks

###########################################################################
## Deployment section
###########################################################################
[pbench-server]
host=%(default-host)s
user=%(default-user)s
group=%(default-group)s
admin-email=%(user)s@%(host)s
mailto=%(default-mailto)s
mailfrom=%(default-mailfrom)s

# See pbench-server-setup documentation for filesystem setup.
pbench-top-dir = /srv/pbench

pbench-archive-version = 001
pbench-archive-dir = %(pbench-top-dir)s/archive/fs-version-%(pbench-archive-version)s

pbench-html-dir = %(pbench-top-dir)s/public_html
pbench-incoming-dir = %(pbench-html-dir)s/incoming
# By default we unpack tar balls directly into the incoming directory tree.
pbench-unpack-dir = %(pbench-incoming-dir)s
pbench-results-dir = %(pbench-html-dir)s/results
pbench-users-dir = %(pbench-html-dir)s/users
pbench-static-dir = %(pbench-html-dir)s/static

pbench-local-dir = /srv/pbench-local
pbench-logs-dir = %(pbench-local-dir)s/logs
pbench-tmp-dir = %(pbench-local-dir)s/tmp
pbench-backup-dir = %(pbench-local-dir)s/archive.backup
# Which client move-results versions we support
pbench-move-results-receive-versions = 001 002
pbench-receive-dir-001 = %(pbench-local-dir)s/pbench-move-results-receive/fs-version-001
pbench-receive-dir-002 = %(pbench-local-dir)s/pbench-move-results-receive/fs-version-002
pbench-quarantine-dir = %(pbench-local-dir)s/quarantine

# Default roles this pbench server takes on, see crontab roles below.
roles = pbench-prep, pbench-results, pbench-backup

# We now index status into ES, but in some cases we might still want to
# use mail.
use-mail-for-status = no

# Optional server environment definition
#environment = staging

# Optional setting when we need to set host as an alias for the real
# host name
#realhost = ip-127.0.0.1

# When a tarball comes in to this server, what processing should it
# undergo?  Production-like servers do at least the first two, and
# possibly more, of the following dispatch states:
#dispatch-states = TO-UNPACK, TO-INDEX, TO-COPY-SOS, TO-BACKUP

# Satellite servers typically do at least this dispatch state:
#dispatch-states = TO-UNPACK

# We need to install some stuff in the apache document root so we
# either get it directly or look in the config file.
#
# N.B. Different distros use different config files.  The following
# works on Fedora, RHEL, CentOS.
[apache]
documentroot = /var/www/html
configfile = /etc/httpd/conf/httpd.conf

# Defaults for pbench-copy-sosreports
[sosreports]
user = vos
host = pbench-sosreports.example.com
dir = /path/to/sosreport/dir

# This *has* to agree with the setting in the pbench-agent config file.
[results]
webserver = %(default-host)s
host_info_url = http://%(webserver)s/pbench-results-host-info.versioned/pbench-results-host-info.URL

###########################################################################
# crontab roles
[pbench-prep]
host = %(default-host)s
user = %(default-user)s
mailfrom = %(user)s@%(host)s
shims = prep-shim-001 prep-shim-002
tasks = pbench-prep-task

[prep-shim-001]
shim-version = 001

[prep-shim-002]
shim-version = 002

[pbench-results]
host = %(default-host)s
user = %(default-user)s
mailfrom = %(user)s@%(host)s
tasks = pbench-dispatch, pbench-unpack-tarballs, pbench-copy-sosreports, pbench-edit-prefixes, pbench-index

[pbench-backup]
host = %(default-host)s
user = %(default-user)s
mailfrom = %(user)s@%(host)s
tasks = pbench-backup-tarballs, pbench-verify-backup-tarballs

###########################################################################
# crontab tasks
[pbench-prep-task]
# This is a template that is expanded by pbench-server-activate-create-crontab
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-prep-$SHIM_VERSION.lock %(script-dir)s/pbench-server-prep-shim-$SHIM_VERSION

[pbench-dispatch]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-dispatch.lock %(script-dir)s/pbench-dispatch

[pbench-backup-tarballs]
crontab = 41 4 * * *  flock -n %(lock-dir)s/pbench-backup-tarballs.lock %(script-dir)s/pbench-backup-tarballs

[pbench-verify-backup-tarballs]
crontab = 59 4 * * *  flock -n %(lock-dir)s/pbench-verify-backup-tarballs.lock %(script-dir)s/pbench-verify-backup-tarballs

[pbench-unpack-tarballs]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs.lock %(script-dir)s/pbench-unpack-tarballs

[pbench-move-unpacked]
njobs = 1
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-move-unpacked.lock %(script-dir)s/pbench-move-unpacked

[pbench-copy-sosreports]
crontab = 41 * * * *  flock -n %(lock-dir)s/pbench-copy-sosreports.lock %(script-dir)s/pbench-copy-sosreports

[pbench-edit-prefixes]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-edit-prefixes.lock %(script-dir)s/pbench-edit-prefixes

[pbench-index]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-index.lock %(script-dir)s/pbench-index

[pbench-sync]
# This is a template that is expanded by pbench-server-activate-create-crontab
crontab =  * * * * *  flock -n %(lock-dir)s/$SATELLITE_LOCK %(script-dir)s/pbench-sync-satellite $SATELLITE_CONFIG

[pbench-sync-cleanup]
crontab = 37 * * * *  flock -n %(lock-dir)s/pbench-satellite-cleanup.lock %(script-dir)s/pbench-satellite-cleanup
