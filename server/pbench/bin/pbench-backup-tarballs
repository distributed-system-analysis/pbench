#! /bin/bash

# Cron job for user pbench, pulling tarballs from the pbench ARCHIVE and
# copying them to the configured backup directory.

# load common things
opts=$SHELLOPTS
case $opts in
    *xtrace*)
        dir=$(dirname $(which $0))
        PROG=$(basename $(which $0))
        ;;
    *)
        dir=$(dirname $0)
        PROG=$(basename $0)
        ;;
esac

# TOP, ARCHIVE, BDIR are defined by the base file
. $dir/pbench-base.sh

tmp=$TMP/${PROG}.$$
mkdir -p $tmp

stats=$tmp/stats
index_content=$tmp/index_mail_contents

trap "rm -rf $tmp" EXIT INT QUIT
                 
log_init $(basename $0) $LOGSDIR/$(basename $0)

# Initialize index mail content
> $index_content

echo "start-$(timestamp)"

rla=$(readlink -f $ARCHIVE)
if [[ $? -ne 0 ]]; then
    echo "$PROG: The ARCHIVE directory does not resolve to a real location, $ARCHIVE"
    log_finish; exit 1
fi
if [[ ! -d "$rla" ]]; then
    echo "$PROG: The ARCHIVE directory does not resolve to a directory, $ARCHIVE"
    log_finish; exit 1
fi

rlb=$(readlink -f $BDIR)
if [[ $? -ne 0 ]]; then
    echo "$PROG: Specified backup directory does not resolve to a real location, $BDIR"
    log_finish; exit 1
fi
if [[ ! -d "$rlb" ]]; then
    echo "$PROG: Specified backup directory does not resolve to a directory, $BDIR"
    log_finish; exit 1
fi

# exclude the subdirs of symlinks
exclude="--exclude=$(echo $LINKDIRS | sed 's/  */ --exclude=/g')"

# N.B The trailing slash is important
rsync -va --stats $exclude $rla/ $rlb | tee -a $stats

rsync_sts=$?
if [[ $rsync_sts -ne 0 ]]; then
    echo "$PROG: rsync failed with code: $rsync_sts, $BDIR"
fi

echo "end-$(timestamp)"

log_finish

# Back up some way and find the empty line separating the list of files
# from the stats.
cat << EOF > $index_content
$PROG.$TS($PBENCH_ENV)
EOF

tail -n 20 $stats | sed -n '/^$/,$p' >> $index_content

pbench-report-status --name $PROG --timestamp $TS --type status $index_content

exit 0
