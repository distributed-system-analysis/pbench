#! /bin/bash

prog=$(basename $0)

function usage() {
    echo "Usage: $prog --name <name> --timestamp <ts> --type status|error <file-to-index>"
}

opts=$(getopt -q -o hn:t:T: --longoptions "help,name:,timestamp:,type:" -n "getopt.sh" -- "$@");

eval set -- "$opts"
while true; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -n|--name)
            name="$2"
            shift 2
            ;;
        -t|--timestamp)
            timestamp="${2#run-}"
            timestamp="${timestamp%-UTC}"
            shift 2
            ;;
        -T|--type)
            doctype="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
    esac
done

file=$1

# if no name, timestamp, type, or file bail
if [ -z "$name" ] ;then
    usage
    exit 1
fi

if [ -z "$timestamp" ] ;then
    usage
    exit 2
fi

if [ -z "$doctype" ] ;then
    usage
    exit 3
fi

if [ -z "$file" ] ;then
    usage
    exit 1
fi

# Some servers might no have an accessible ES instance.
# The config file will contain
#   use-mail-for-status = yes
# in that case and we'll fall back to mail.
report_using_mail=$(getconf.py use-mail-for-status pbench-server)
if [ ! -z "$report_using_mail" -a "$report_using_mail" != "no" ] ;then
    mailx -s "$name status report" $mail_recipients < $file
    status=$?
    exit $status
fi

CONFIG=/opt/pbench-server/lib/config/pbench-index.cfg

server=$(getconf.py server Server)
datestamp=${timestamp%-*}
index=$(getconf.py index_prefix Settings)."$name"."$datestamp"
md5=$(md5sum $file | cut -d' ' -f1)

# Translate newlines to spaces and translate tildes which are used as
# sed delimiters below to double underscores - otherwise the sed below
# gets very confused.  It would be ideal if we could send the textfile
# as an attachment. Recent ES versions have a plugin for that, but the
# production ES is old and does not support it. We'll revisit this
# when we update ES.
text=$(cat $file | sed 's/~/__/g' | tr '\n' ' ')

tmp=/tmp/$prog.$$

trap "rm -rf $tmp" EXIT QUIT INT

echo '
{
    "@timestamp": %timestamp%,
    "name": %name%,
    "doctype": %type%,
    "text": %text%
}' |
sed 's/%timestamp%/"'$timestamp'"/
     s/%name%/"'$name'"/
     s/%type%/"'$doctype'"/
     s~%text%~"'"$text"'"~' > $tmp

curl -XPOST -H 'Content-Type: application/json' "http://$server/$index/$doctype/$md5" --data @"${tmp}" >> $LOGSDIR/$name/$name.log 2>&1
status=$?

echo >> $LOGSDIR/$name/$name.log

exit $status

