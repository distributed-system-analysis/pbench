#! /bin/bash

prog=$(basename $0)
dir=$(dirname $0)

function usage() {
    echo "Usage: $prog --name <name> --timestamp <ts> --type status|error <file-to-index>"
}

opts=$(getopt -q -o hn:t:T: --longoptions "help,name:,timestamp:,type:" -n "getopt.sh" -- "$@");

eval set -- "$opts"
while true; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -n|--name)
            name="$2"
            shift 2
            ;;
        -t|--timestamp)
            # timestamp is of the form run-<yyyy>-<mm>-<dd>T<HH>:<MM>:<SS>-<TZ>
            # It is the value of the variable TS created by pbench-base.sh.

            # Snip off the initial "run-"
            timestamp="${2#run-}"
            shift 2
            ;;
        -T|--type)
            doctype="$2"
            shift 2
            ;;
        --)
            shift
            break
            ;;
    esac
done

file=$1

# if no name, timestamp, type, or file bail
if [ -z "$name" ] ;then
    usage
    exit 1
fi

if [ -z "$timestamp" ] ;then
    usage
    exit 2
fi

if [ -z "$doctype" ] ;then
    usage
    exit 3
fi

if [ -z "$file" ] ;then
    usage
    exit 1
fi

# Some servers might no have an accessible ES instance.
# The config file will contain
#   use-mail-for-status = yes
# in that case and we'll fall back to mail.
report_using_mail=$(getconf.py use-mail-for-status pbench-server)
if [ ! -z "$report_using_mail" -a "$report_using_mail" != "no" ] ;then
    mailx -s "$name status report at $timestamp" $mail_recipients < $file
    status=$?
    exit $status
fi

tmp=/tmp/$prog.$$

trap "
# append ${tmp}/log to the caller's log file
if [ -f "$LOGSDIR/$name/$name.log" ]; then
    cat ${tmp}/log >> $LOGSDIR/$name/$name.log
fi;

rm -rf $tmp" EXIT QUIT INT

mkdir $tmp

server=$(getconf.py --config $IDXCONFIG server Server)
if [[ -z "$server" ]] ;then
    echo "$prog: no server defined in [Server] section of $IDXCONFIG" >> ${tmp}/log
    exit 2
fi

# Snip off the trailing "-<TZ>" - assumes that <TZ> does not contain a "-"
datestamp="${timestamp%-*}"
# Snip off the time part of the timestamp to get YYYY-MM
datestamp=${datestamp%-*}

index=$(getconf.py --config $IDXCONFIG index_prefix Settings)."$name"."$datestamp"
if [[ -z "$index" ]] ;then
    echo "$prog: no index_prefix defined in [Settings] section of $IDXCONFIG" >> ${tmp}/log
    exit 3
fi

md5=$(md5sum $file | cut -d' ' -f1)

# drop the -UTC spec from the timestamp: the ES date parser does not like it
$dir/pbench-gen-json-payload ${timestamp%-*} $name $doctype $file > ${tmp}/payload

>${tmp}/http_code
>${tmp}/response_body
curl --silent --show-error -XPOST -H 'Content-Type: application/json' --output ${tmp}/response_body --write-out "%{http_code}" "http://$server/$index/$doctype/$md5" --data @"${tmp}/payload" > ${tmp}/http_code 2>> ${tmp}/log
status=$?
if [ ${status} -ne 0 -o "$(cat ${tmp}/http_code)" != "201" ]; then
    echo "${prog}: curl failed (exit code: \"${status}\", HTTP code: \"$(cat ${tmp}/http_code 2> /dev/null)\")" >> ${tmp}/log
    if [ -s ${tmp}/response_body ]; then
        echo "Response body:" >> ${tmp}/log
        cat ${tmp}/response_body >> ${tmp}/log 2> /dev/null && echo >> ${tmp}/log
    fi
fi

exit $status
