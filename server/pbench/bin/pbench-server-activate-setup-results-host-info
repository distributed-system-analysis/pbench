#! /bin/bash

prog=$(basename $0)
# We need to copy some stuff to the apache document root, in order to
# allow move-results to find the pbench server.

# This script assumes that the apache server is running on the
# same host where the pbench server bits are being installed.
# It is meant to be run as part of the %postinstall phase of
# an internal pbench-server RPM, but it can be run manually:
#
# pbench-set-results-host-info
#
# It assumes that the config file is already installed.

usage="Usage: $prog"

if [ ! -f $CONFIG ]
then
    echo "Config file $CONFIG does not exist"
    exit 2
fi

documentroot=$(getconf.py documentroot apache)

if [ -z "$documentroot" ] ;then
    httpd_configfile=$(getconf.py configfile apache)
    if [ -z "$httpd_configfile" ] ;then
        echo "No documentroot/configfile for apache is defined in the pbench config file"
        exit 3
    fi
    documentroot=$(grep -i DocumentRoot $httpd_configfile | cut -f 2 | sed 's/\"//g')
fi

if [ -z "$documentroot" ] ;then
        echo "No documentroot for apache can be determined"
        exit 4
fi

cd $documentroot || exit 1

# the directory and filename are specified in the agent config file as
# the value of [results]/host_info_url and the setting is duplicated
# (except for the version number which is appended here) in the server
# config file: if it changes in one, it *has* to change in the other.

results_host_info_url=$(getconf.py host_info_url results)
if [ -z "$results_host_info_url" ] ;then
    echo 'No setting for host_info_url in section "results" of the configuration file.'
    exit 5
fi

# path is relative to documentroot
path=$(echo $results_host_info_url | sed 's/http:\/\///' | sed 's/[^/]*\///')

mkdir -p $(dirname $path)
cd $(dirname $path) >/dev/null 2>&1 || exit 6
user=$(getconf.py user pbench-server)
host=$(getconf.py default-host pbench-server)

versions=$(getconf.py versions results)
for version in $versions ;do
    prefix=$(basename $path)${version}
    receive_dir=$(getconf.py receive-dir-${version} pbench-server)
    results_host_info=$user@$host:${receive_dir}
    echo $results_host_info > $prefix.active

    # create the maintenance file as well
    # the format is *fixed*: see the pbench-agent move-results script for details
    # IOW, do *NOT* change anything here
    mailaddr=$(getconf.py mailto results)
    msg="MESSAGE===System Under Maintenance - please retry at a later time ($mailaddr)"

    echo $msg > $prefix.maint

    # mark it active
    ln -sf $prefix.active $prefix 2>/dev/null
done

exit 0
