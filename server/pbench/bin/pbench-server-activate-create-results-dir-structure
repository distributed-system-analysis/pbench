#! /bin/bash

prog=$(basename $0)
usage="Usage: $prog [<test-dir-prefix>]"

# testdir is only used for unit tests
testdir=$1

if [ ! -f $CONFIG ] ;then
    echo "$CONFIG does not exist"
    exit 2
fi

pbench_dir=$(getconf.py deploy-pbench-dir results)
if [ -z "$pbench_dir" ] ;then
    echo "deploy-pbench_dir is undefined in section \"results\" of config file."
    exit 3
fi

archive_dir=$(getconf.py deploy-archive-dir results)
if [ -z "$archive_dir" ] ;then
    echo "deploy-archive_dir is undefined in section \"results\" of config file."
    exit 4
fi

user=$(getconf.py default-user results)
if [ -z "$user" ] ;then
    echo "default-user is undefined in section \"results\" of config file."
    exit 5
fi

group=$(getconf.py default-group results)
if [ -z "${group}" ] ;then
    echo "default-group is undefined in section \"results\" of config file."
    exit 5
fi

if [ ! -z "$testdir" ] ;then
    pbench_dir=${testdir}${pbench_dir}
    archive_dir=${testdir}${archive_dir}
fi

# it's OK if the directories exist already.
mkdir -p ${archive_dir}
mkdir -p ${pbench_dir}/public_html/incoming
mkdir -p ${pbench_dir}/public_html/results
mkdir -p ${pbench_dir}/public_html/users

chown ${user}.${group} ${pbench_dir} \
      ${archive_dir} ${pbench_dir}/public_html \
      ${pbench_dir}/public_html/incoming ${pbench_dir}/public_html/results \
      ${pbench_dir}/public_html/users

sts=$?
if [ "$sts" != "0" ] ;then
    nerrs=$nerrs+1
fi

# it's OK if this fails: the directories may be empty
chown ${user}.${group} ${pbench_dir} \
      ${archive_dir}/* ${pbench_dir}/public_html/incoming/* ${pbench_dir}/public_html/results/* 2>/dev/null

if which selinuxenabled > /dev/null 2>&1 && selinuxenabled ;then
     if [ "${_PBENCH_SERVER_TEST}" != 1 ] ;then
        # cannot yum install here because this script is executed as a postinstall action
        # from yum: trying to run yum again runs afoul of the yum lock. We will require
        # the packages in the spec file of the pbench-server RPM instead.

        # yum install -y policycoreutils policycoreutils-python-utils

        # we assume that semanage and restorecon are available.
        # fix up the public_html subdirs for selinux
        semanage fcontext -a -t httpd_sys_content_t ${pbench_dir}/public_html/incoming
        semanage fcontext -a -t httpd_sys_content_t ${pbench_dir}/public_html/results
        semanage fcontext -a -t httpd_sys_content_t ${pbench_dir}/public_html/users
        restorecon -v ${pbench_dir}/public_html \
                      ${pbench_dir}/public_html/incoming \
                      ${pbench_dir}/public_html/results \
                      ${pbench_dir}/public_html/users
    fi
fi

# create the logs directory
logsdir=$(getconf.py deploy-pbench-logs-dir results)
mkdir -p ${logsdir} && chown -R ${user}.${group} ${logsdir}

# create the tmp directory
tmpdir=$(getconf.py deploy-pbench-tmp-dir results)
mkdir -p ${tmpdir} && chown -R ${user}.${group} ${tmpdir}

# create the reception directories for the shims
for version in $(getconf.py versions results) ;do
    shimdir=$(getconf.py deploy-pbench-receive-dir-$version results)
    mkdir -p ${shimdir} && chown -R ${user}.${group} ${shimdir}
done

qdir=$(getconf.py quarantine-dir pbench-server)
for version in $(getconf.py versions results) ;do
    mkdir -p ${qdir}/md5-${version} ${qdir}/duplicates-${version} ${qdir}/errors-${version} 
done
chown -R ${user}.${group} ${qdir}

exit 0

