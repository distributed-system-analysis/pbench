#+TITLE: How to install pbench-server using the ansible playbooks

* Introduction
There is an ansible playbook and a set of roles to facilitate the
installation of pbench-server on a host (or, less commonly, a set of
hosts, e.g. servers in multiple environments). The playbook assumes
that you will be installing RPM packages from a repo: we have a COPR
repo that is publicly available, but you might prefer to have your own
repo. Note that the playbooks do *NOT* provide the capability to
install from source.

The playbook is =pbench-server-install.yml= and the roles are as
follows:

- pbench-repo-install: install the pbench repos into /etc/yum.repos.d.
- pbench-server-install: install the pbench-server RPM.
- pbench-server-config: install the server onfiguration file and
  configure the server according to it.[fn:1]

* Setup

** Install the playbooks locally

This is a one-time step: once you have the playbooks locally, you
can use them to reinstall multiple times.

To get the playbooks, clone the pbench repo from github:
#+begin_src shell
git clone https://github.com/distributed-system-analysis/pbench.git .
#+end_src

The playbooks can then be found under ~./pbench/server/ansible~.

You will also need to install a third-party role from Ansible Galaxy:
#+begin_src shell
ansible-galaxy install geerlingguy.apache
#+end_src

Eventually, we plan to put all the roles in Ansible Galaxy.

** Create an inventory file

Create an inventory file by copying the example file
~ansible/Inventory/pbench-server.hosts.example~ and modifying the
=[servers]= section, listing all the relevant hosts.  The file
can be created anywhere, but for the purposes of this document we
assume that it is in ~/tmp/pbench-server.hosts~.

In addition to the hosts, the inventory file should define a
=configurl= variable whose value should be the URL where the server
config file can be found. We provide a generic example inventory file,
but a local installation will require an inventory file with that
variable already set to point to the server config file appropriate
for that installation.

You might want to create multiple inventory files if you have
multiple sets of servers to install to, e.g. "production" servers
and "staging" servers should probably go into different inventory
files.

** Make sure that you can ssh to the hosts as *root* without a password

#+begin_src shell
ssh-copy-id root@<host>
#+end_src

When prompted, enter the root password; repeat for each host.

** Install the =geerlingguy.apache= playbook from Ansible Galaxy

This is a sub-role used by =pbench-server-config=:

#+begin_src shell
ansible-galaxy install geerlingguy.apache
#+end_src

* Run the playbook

With the setup done, you can run the playbook:
#+begin_src shell
ansible-playbook -i /tmp/pbench-server.hosts pbench-server-install.yml
#+end_src

You might want to run this first to check that you are installing on
the correct set of hosts:
#+begin_src shell
ansible-playbook -i /tmp/pbench-server.hosts --list-hosts pbench-server-install.yml
#+end_src

* Some caveats

** "No /usr/bin/python" systems (e.g. Fedora 30)
You might have problems installing on a Fedora 30 host. If there is a
problem, you may be able to work around it by changing the python
interpreter that will be used on the host. The easiest way to do that
is to annotate the host entry in the inventory file with a definition
for the =ansible_python_interpreter= variable:

#+begin_example
[servers]
host1
host2             ansible_python_interpreter=/usr/bin/python3
#+end_example

so that =/usr/bin/python3= will be used by ansible as the python
interpreter on that host.

** Dependencies

Some playbooks require ~semanage~ which is provided by the
=policycoreutils-python-utils= package on Fedora and RHEL8; the
package is called =policycoreutils-python= on RHEL7. There is a
=pbench-server-deps.yml= playbook in the =contrib/= area (see below)
that will install the appropriate package, as well as the
=python2-dnf= or =python3-dnf= package that is required by ansible itself.
Normally, neither should be a problem: the =policycoreutils-python= package
should be installed as a dependency when the =pbench-server= RPM is
installed; =pythonX-dnf= should be installed as part of the base system.

** Currently supported systems
The playbooks have been tested on systems that run RHEL7, RHEL8 and
current Fedora distros (Fedora 28, 29 and 30). We are planning to
continue supporting the playbooks on RHEL7, RHEL8 and whatever Fedora
distros are available at that time, with the caveat that when a new
release comes out, it may take a little time to test the playbooks and
fix any breakage.

* Some other playbooks

There asome more playbooks in the contrib area - they are unsupported,
but they might be useful:

- =pbench-repo-install.yml= installs the pbench repo in each host's
  =/etc/yum.repos.d= directory. This uses a role from the =server/ansible=
  directory.
- =pbench-server-uninstall.yml= uninstalls the pbench-server bits and
  cleans up (but the cleanup may be incomplete). We have used this
  for debugging the installation playbook.
- =pbench-server-deps.yml= un/installs some miscellaneous packages.

You can of course provide your own playbooks that use some of these
roles: the =pbench-repo-install.yml= playbook mentioned above is
an example of this; in addition, it is often convenient to create
specialized playbooks for testing.

* Installing on multiple servers
It is sometimes convenient to install =pbench-server= on multiple
hosts[fn:2]. Assuming you have config files for all the servers,
you can put them at some URL which depends on the server environment:
#+begin_example
http://pbench.example.com/server/config/master/pbench-server.cfg
http://pbench.example.com/server/config/satellite/pbench-server.cfg
#+end_example
Then all you have to do is use a host variable in your inventory file
to select the appropriate config file for each server host:
#+begin_example
[servers]
host1         config_env=master
host2         config_env=satellite

[servers:vars]
configurl = http://pbench.example.com/server/config/{{ config_env }}/pbench-server.cfg
#+end_example
There are no changes to the playbooks or roles.

* Footnotes

[fn:1] The =pbench-server-config= role is composed of the following
sub-roles, which are *not* meant to stand by themselves (except for
the =geerlingguy.apache= role):

- pbench-server-install-config-file: install the config file for this
  particular server. This is a prerequisite for all the roles below
  (except for the =geerlingguy.apache= role).
- =geerlingguy.apache=: install and configure apache. This is a role we
  download from Ansible Galaxy.
- =pbench-server-vars=: query each server and set some additional facts
  from its (previously installed) configuration file.
- =pbench-server-activate-create-crontab=: run a script on each server
  to create its crontab.
- =pbench-server-activate-setup-results-hosts-info=: create the
  structures that =pbench-move-results= expects in order to be able to
  send tarballs to the server.
- =pbench-server-activate-create-results-dir-structure=: create the
  structures that store the tarballs and enable further processing by
  the server scripts.
- =pbench-server-activate-httpd-setup-restart=: creation of links to
  allow access to results and resources needed to visualize them.

[fn:2] One example of multiple servers is the case where we have a
master server for most =pbench-agent= hosts, but we also have an
"island" of =pbench-agent= hosts that cannot communicate directly with
the master server: in that case, we set up a satellite server on the
island itself, so that all the island hosts can send their results to
the satellite server. The master server then polls the satellite and pulls
back those results periodically.


