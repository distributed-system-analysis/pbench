#! /bin/bash

case $# in
    2|3) ;;
    *) echo "Usage: set-version-release <version> <prog.spec> [git]" >/dev/stderr
       exit 1
       ;;
esac

version=$1
file=$2

shopt -s nocasematch
if [[ -z "$3" || "$3" == "no" || "$3" == "false" ]] ;then
    use_git_sha1=""
elif [[ "$3" != "yes" && "$3" != "true" ]] ;then
    use_git_sha1=g$3
else
    use_git_sha1=g$(git rev-parse --short HEAD)
fi
if [ -f ./seqno ] ;then
    # get it and increment it
    buildnum=$(cat ./seqno)
    expr $buildnum + 1 > ./seqno
else
    buildnum=1
fi

# Most spec files do not contain a %define gdist line, so the second
# substitution is a no-op (even if called with a "yes" third
# argument). In that case the third substitution sets the release to
# <buildnum>.<distro>.  The pbench spec file does include such a line,
# *and* it is called with the optional third argument: in that case,
# gdist is defined to be g<SHA1>.<distro> and the third substitution
# makes the release <buildnum>.g<SHA1>.<distro>.
# As I said: ripe for reimplementation...

sed "s/Version: .*/Version:     $version/
     s/%define version .*/%define version   $version/
     s/%define gdist .*/%define gdist ${use_git_sha1}/
     s/Release: .*/Release:     ${buildnum}%{?gdist}%{!?gdist:}/" $file
