[DEFAULT]

###########################################################################
# These should be overridden in the env-specific config file.
default-user = pbench
default-group = pbench
#
###########################################################################

# WARNING - the pbench-server.cfg file should provide a definition of
# install-dir, e.g.:
#     install-dir = /opt/pbench-server
# We won't define it here by default to avoid unintended behaviors.
script-dir = %(install-dir)s/bin
lib-dir = %(install-dir)s/lib
crontab-dir = %(lib-dir)s/crontab
lock-dir = %(lib-dir)s/locks

###########################################################################
## Deployment section
###########################################################################
[pbench-server]
user=%(default-user)s
group=%(default-group)s
admin-email=%(user)s@localhost
mailto=%(admin-email)s
mailfrom=%(user)s@localhost

# Token expiration duration in minutes, can be overridden in the main config file, defaults to 60 mins
token_expiration_duration = 60

# Maximum number of days an unpacked tar ball directory hierarchy will be
# kept around.
max-unpacked-age = 30

# Server settings for dataset retention in days; the default can be overridden
# by user metadata, bounded by the server maximum.
maximum-dataset-retention-days = 3650
default-dataset-retention-days = 730

# See pbench-server-setup documentation for filesystem setup.

# WARNING - the pbench-server.cfg file should provide a definition of
# pbench-top-dir, e.g.:
#     pbench-top-dir = /srv/pbench
# We won't define it here by default to avoid unintended behaviors.

pbench-archive-version = 001
pbench-archive-dir = %(pbench-top-dir)s/archive/fs-version-%(pbench-archive-version)s

# Specify where to store temporary cache manager files. By default this is
# /srv/pbench/.cache if pbench-top-dir is /srv/pbench
pbench-cache-dir = %(pbench-top-dir)s/.cache

# By default the local directory is the same as the top directory. You might
# want to consider placing the local directory on a separate FS to avoid the
# temporary files, log files, and reception files from competing with disk
# bandwidth and space of the archive, incoming and results hierarchies.
pbench-local-dir = %(pbench-top-dir)s

pbench-logs-dir = %(pbench-local-dir)s/logs
pbench-tmp-dir = %(pbench-local-dir)s/tmp

# pbench-server rest api variables
bind_host = 0.0.0.0
bind_port = 8001
rest_version = 1
# max allowed size for tarfile upload, acceptable format {X[unit] or X [unit]}
rest_max_content_length = 1 gb
rest_uri = /api/v%(rest_version)s

# WSGI gunicorn specific configs
workers = 3
# Set the gunicorn worker timeout. Setting it to 0 has the effect of infinite timeouts
worker_timeout = 9000

# WARNING - the pbench-server.cfg file should provide a definition of
# pbench-backup-dir, e.g.:
#     pbench-backup-dir = %(pbench-local-dir)s/archive.backup
# We won't define it here by default to avoid unintended behaviors.

# Default roles this pbench server takes on, see crontab roles below.
roles = pbench-results

# Optional server environment definition
#environment = staging

# Optional setting when we need to set host as an alias for the real
# host name
#realhost = ip-127.0.0.1

[Indexing]
#uri = https://indexer.example.com:9000
wait_timeout = 120
#index_prefix =

[database]
#uri = driver://user:password@hostname/dbname
wait_timeout = 120

[flask-app]
# Secret key for use by the Pbench Server API Flask sub-system for security
# related tasks.
#secret-key = <replace with a secret>

[openid-connect]
# OpenID Connect (OIDC) section to use when OIDC is to be used as the user
# identity provider for authentication and authorization purposes.  The OIDC
# server we'll expect to use is KeyCloak.

# URL of the OIDC auth server; when this URL is not configured the Pbench Server
# will use its own user & token implementation.
#server_url = http://keycloak-broker.example.com:8080

# Realm name that is used for with OIDC.
realm = pbench-server

# Client entity name requesting OIDC to authenticate a user.
client = pbench-server-client

# Client secret if the above client is not public.
#secret = <replace with a secret>

#[pbench-backup-tarballs]
#logging_level = DEBUG

#[pbench-verify-backup-tarballs]
#logging_level = DEBUG

#[pbench-index]
#logging_level = DEBUG

[logging]
logger_type = devlog
logging_level = INFO
# "hostport" "logger_type" uses UDP-based logging.
#logger_host = localhost
#logger_port = 514
# "log_dir" is only considered when "logger_type" is set to "file", and it
# replaces the [pbench-server] configuration value, "pbench-logs-dir".
#log_dir =

###########################################################################
# crontab roles
[pbench-results]
user = %(default-user)s
mailfrom = %(user)s@localhost
tasks = pbench-index, pbench-re-index

###########################################################################
# crontab tasks

[pbench-index]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-index.lock %(script-dir)s/pbench-index

[pbench-re-index]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-re-index.lock %(script-dir)s/pbench-index --re-index

[pbench-index-tool-data]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-index-tool-data.lock %(script-dir)s/pbench-index --tool-data
