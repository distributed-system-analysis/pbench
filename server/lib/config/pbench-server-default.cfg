[DEFAULT]

###########################################################################
# These should be overridden in the env-specific config file.
default-host = pbench.example.com
default-user = pbench
default-group = pbench
#
###########################################################################

# WARNING - the pbench-server.cfg file should provide a definition of
# install-dir, e.g.:
#     install-dir = /opt/pbench-server
# We won't define it here by default to avoid unintended behaviors.
script-dir = %(install-dir)s/bin
lib-dir = %(install-dir)s/lib
crontab-dir = %(lib-dir)s/crontab
lock-dir = %(lib-dir)s/locks

###########################################################################
## Deployment section
###########################################################################
[pbench-server]
host=%(default-host)s
user=%(default-user)s
group=%(default-group)s
admin-email=%(user)s@%(host)s
mailto=%(admin-email)s
mailfrom=%(user)s@%(host)s
commit-id=unknown

# Maximum number of days an unpacked tar ball directory hierarchy will be
# kept around.
max-unpacked-age = 30

# See pbench-server-setup documentation for filesystem setup.

# WARNING - the pbench-server.cfg file should provide a definition of
# pbench-top-dir, e.g.:
#     pbench-top-dir = /srv/pbench
# We won't define it here by default to avoid unintended behaviors.

# WARNING - the pbench-server.cfg file should provide a definition of
# pbench-backup-dir, e.g.:
#     pbench-backup-dir = /nfsmnt/pbench/backup
# A normal production server SHOULD define this option and provide the actual
# mount point, while a satellite server typically does not need to provide this
# option.

# By default we unpack tar balls directly into the incoming directory tree.
pbench-incoming-dir = %(pbench-top-dir)s/public_html/incoming

# By default the local directory is the same as the top directory. You
# might want to consider placing the local directory on a separate FS
# to avoid the temporary files, log files, quarantine, and reception files
# from competing with disk bandwidth and space of the incoming, results, and
# users hierarchies.
pbench-local-dir = %(pbench-top-dir)s

pbench-logs-dir = %(pbench-local-dir)s/logs
pbench-tmp-dir = %(pbench-local-dir)s/tmp

# Which client move-results versions we support
pbench-move-results-receive-versions = 002
pbench-receive-dir-prefix = %(pbench-local-dir)s/pbench-move-results-receive/fs-version
pbench-quarantine-dir = %(pbench-local-dir)s/quarantine

# Where tar balls land to be unpacked from
pbench-unpack-dir = %(pbench-local-dir)s/unpack
pbench-re-unpack-dir = %(pbench-local-dir)s/re-unpack

# Default roles this pbench server takes on, see crontab roles below.
roles = pbench-maintenance, pbench-results

# We now index status into ES, but in some cases we might still want to
# use mail.
use-mail-for-status = no

# Optional server environment definition
#environment = staging

# Optional setting when we need to set host as an alias for the real
# host name
#realhost = ip-127.0.0.1

# When a tarball comes in to this server it should be unpacked first.
dispatch-states = TO-UNPACK

# Upper and lower bounds in MB bytes
[pbench-unpack-tarballs/small]
upperbound = 130
[pbench-unpack-tarballs/medium]
lowerbound = 130
upperbound = 240
[pbench-unpack-tarballs/large]
lowerbound = 240
upperbound = 820
[pbench-unpack-tarballs/huge]
lowerbound = 820

# NOTE: No defaults are provided for the "Indexing" section deliberately.
# [Indexing]
# server =
# index_prefix =
# bulk_action_count =

# We need to install some stuff in the apache document root so we
# either get it directly or look in the config file.
#
# N.B. Different distros use different config files.  The following
# works on Fedora, RHEL, CentOS.
[apache]
documentroot = /var/www/html
configfile = /etc/httpd/conf/httpd.conf

# This *has* to agree with the setting in the pbench-agent config file.
[results]
webserver = %(default-host)s
host-info-path-prefix = pbench-results-host-info.versioned/pbench-results-host-info.URL
host_info_url = http://%(webserver)s/%(host-info-path-prefix)s

[logging]
logger_type = devlog
# hostport logger type uses UDP-based logging.
# logger_host = localhost
# logger_port = 514

###########################################################################
# crontab roles
[pbench-maintenance]
host = %(default-host)s
user = %(default-user)s
mailfrom = %(user)s@%(host)s
tasks = pbench-audit-server

[pbench-results]
host = %(default-host)s
user = %(default-user)s
mailfrom = %(user)s@%(host)s
tasks = pbench-dispatch, pbench-unpack-tarballs-small, pbench-unpack-tarballs-medium, pbench-unpack-tarballs-large, pbench-unpack-tarballs-huge, pbench-cull-unpacked-tarballs

###########################################################################
# crontab tasks

[pbench-dispatch]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-dispatch.lock %(script-dir)s/pbench-dispatch

[pbench-unpack-tarballs]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs.lock %(script-dir)s/pbench-unpack-tarballs

[pbench-unpack-tarballs-small]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs-small.lock %(script-dir)s/pbench-unpack-tarballs small

[pbench-unpack-tarballs-medium]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs-medium.lock %(script-dir)s/pbench-unpack-tarballs medium

[pbench-unpack-tarballs-large]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs-large.lock %(script-dir)s/pbench-unpack-tarballs large

[pbench-unpack-tarballs-huge]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs-huge.lock %(script-dir)s/pbench-unpack-tarballs huge

[pbench-re-unpack-tarballs]
crontab =  * * * * *  flock -n %(lock-dir)s/pbench-unpack-tarballs.lock %(script-dir)s/pbench-unpack-tarballs none re-unpack

[pbench-cull-unpacked-tarballs]
crontab =  1 2 * * *  flock -n %(lock-dir)s/pbench-cull-unpacked-tarballs.lock %(script-dir)s/pbench-cull-unpacked-tarballs

[pbench-audit-server]
crontab =  1 3 * * *  flock -n %(lock-dir)s/pbench-audit-server.lock %(script-dir)s/pbench-audit-server

[pbench-sync]
# This is a template that is expanded by pbench-server-activate-create-crontab
crontab =  * * * * *  flock -n %(lock-dir)s/$SATELLITE_LOCK %(script-dir)s/pbench-sync-satellite $SATELLITE_CONFIG
