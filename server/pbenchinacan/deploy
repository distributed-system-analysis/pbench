#!/bin/bash -e

#
# This script deploys a new Pbench Server instance using a container image.
# (Note:  for updating an existing instance, see the `redeploy` script.)
#
# Steps performed:
#   - Create a systemd service file for the pbench-server service.  Copy it
#     into the appropriate directory.  Enable the service (but don't start it).
#   - Invoke the `redeploy` script to deploy the Dashboard and start the service.
#
# The key inputs are the following environment variables:
#   - PB_DEPLOY_FILES:  the location (on the host) of the configuration files
#                       for the Pbench Server and rsyslog.
#   - SRV_PBENCH:  the location of the file system (on the host) which will be
#                       mounted inside the container at /srv/pbench.
#
# Other inputs which can be provided by environment variables include:
#   - the name and pull policy for the Pbench Server container image
#   - the container image tag or the entire image specification
#   - the location of the Pbench Dashboard app files and the Nginx Favicon
#     (for use by the `redeploy` script invocation)
#   - the location of the Pbench Git checkout (used to locate the above)
#
# In all cases, suitable defaults are provided for any value which is undefined.
#

#+
# Configuration
#-

# Pbench Server container image
PB_SERVER_IMAGE_TAG=${PB_SERVER_IMAGE_TAG:-"main"}
PB_SERVER_IMAGE=${PB_SERVER_IMAGE:-"images.paas.redhat.com/pbench/pbench-server:${PB_SERVER_IMAGE_TAG}"}
PB_SERVER_IMAGE_PULL_POLICY=${PB_SERVER_IMAGE_PULL_POLICY:-"newer"}
PB_SERVER_CONTAINER_NAME=${PB_SERVER_CONTAINER_NAME:-"pbench-server"}

# Locations on the host
GITTOP=${GITTOP:-$(git rev-parse --show-toplevel)}
PB_DASHBOARD_DIR=${PB_DASHBOARD_DIR:-${GITTOP}/dashboard/build}
PB_DEPLOY_FILES=${PB_DEPLOY_FILES:-${HOME}/Deploy}
SRV_PBENCH=${SRV_PBENCH:-/srv/pbench}
PB_SSL_CERT_FILE=${PB_SSL_CERT_FILE:-${PB_DEPLOY_FILES}/pbench-server.crt}
PB_SSL_KEY_FILE=${PB_SSL_KEY_FILE:-${PB_DEPLOY_FILES}/pbench-server.key}

#+
# Deployment
#-

# Create a systemd service file for the Pbench Server
# (This was originally generated by Podman and then heavily edited.)
cat >"${PB_DEPLOY_FILES}/pbench-server.service" <<- EOD
	[Unit]
	Description=Containerized Pbench Server
	Documentation=https://distributed-system-analysis.github.io/pbench/
	Documentation=https://pbench.readthedocs.io/en/latest/Server/API/README.html
	Documentation=https://github.com/distributed-system-analysis/pbench
	Wants=network-online.target
	After=network-online.target
	RequiresMountsFor=%t/containers

	[Service]
	Environment=PODMAN_SYSTEMD_UNIT=%n
	Restart=on-failure
	TimeoutStopSec=30
	ExecStartPre=/bin/rm -f %t/%n.ctr-id
	ExecStart=/usr/bin/podman run \
	  --cidfile=%t/%n.ctr-id \
	  --cgroups=no-conmon \
	  --sdnotify=conmon \
	  --replace \
	  --detach \
	  --name "${PB_SERVER_CONTAINER_NAME}" \
	  --network host \
	  --rm \
	  --volume "${PB_DEPLOY_FILES}"/etc/rsyslog.conf:/etc/rsyslog.conf:Z \
	  --volume "${PB_DEPLOY_FILES}"/etc/rsyslog.d:/etc/rsyslog.d:Z \
	  --volume "${PB_SSL_CERT_FILE}":/etc/pki/tls/certs/pbench-server.crt:Z \
	  --volume "${PB_SSL_KEY_FILE}":/etc/pki/tls/private/pbench-server.key:Z \
	  --volume "${PB_DEPLOY_FILES}"/pbench-server.cfg:/opt/pbench-server/lib/config/pbench-server.cfg:Z \
	  --volume "${SRV_PBENCH}":/srv/pbench:Z \
	  ${PB_SERVER_PODMAN_SWITCHES} \
	  ${PB_SERVER_IMAGE}
	ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
	ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
	Type=notify
	NotifyAccess=all

	[Install]
	WantedBy=default.target
EOD

# Set up the Pbench Server as a system service.
cp "${PB_DEPLOY_FILES}/pbench-server.service" "${HOME}/.config/systemd/user/"
systemctl --user enable --force pbench-server

# Refresh the deployment and start the service.
server/pbenchinacan/redeploy
