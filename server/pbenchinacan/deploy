#!/bin/bash -e

#
# This script deploys a Pbench Server instance from a container image.
#
# Steps performed:
#   - The Pbench Dashboard application files are copied from the build directory
#     into the SRV_PBENCH file system.  (If the build directory does not exist,
#     an empty directory is created at the output location, a warning is
#     printed, and the Pbench Server is deployed without a Dashboard.)
#   - The Nginx favicon file is copied into the appropriate location in the
#     SRV_PBENCH file system.
#   - The ownership of the files in the SRV_PBENCH file system are set for
#     access inside the container.
#   - The Pbench Server container is started and run as a detached process.
#
# The key inputs are the following environment variables:
#   - PB_DEPLOY_FILES:  the location (on the host) of the configuration files
#                       for the Pbench Server and rsyslog.
#   - SRV_PBENCH:  the location of the file system (on the host) which will be
#                       mounted inside the container at /srv/pbench.
#
# Other inputs which can be provided by environment variables include:
#   - the name and pull policy for the Pbench Server container image
#   - the location of the Pbench Dashboard app files and the Nginx Favicon
#   - the location of the Pbench Git checkout (used to locate the above)
#
# In all cases, suitable defaults are provided for any value which is undefined.
#

#+
# Configuration
#-

# Pbench Server container image
PB_SERVER_IMAGE=${PB_SERVER_IMAGE:-"images.paas.redhat.com/pbench/pbench-server:main"}
PB_SERVER_IMAGE_PULL_POLICY=${PB_SERVER_IMAGE_PULL_POLICY:-"newer"}
PB_SERVER_CONTAINER_NAME=${PB_SERVER_CONTAINER_NAME:-"pbench-server"}

# Locations on the host
GITTOP=${GITTOP:-$(git rev-parse --show-toplevel)}
PB_DASHBOARD_DIR=${PB_DASHBOARD_DIR:-${GITTOP}/dashboard/build}
PB_DEPLOY_FILES=${PB_DEPLOY_FILES:-${HOME}/Deploy}
SRV_PBENCH=${SRV_PBENCH:-/srv/pbench}

# Locations inside the container
#
# The value of ${NGINX_FAVICON} points to the location where the file will be
# found inside the container and is used to create a symbolic link; by default,
# it refers to a file in the Dashboard deployment relative to
# /srv/pbench/public_html.
NGINX_FAVICON=${NGINX_FAVICON:-"./dashboard/src/assets/logo/color-square.16x16.ico"}

#+
# Deployment
#-

# Update the Dashboard code, removing any existing code and copying in fresh.
# We expect that the host dashboard directory already exists and contains a
# build of the Pbench Dashboard application; however, if it is missing, we
# deploy the Pbench Server without a Dashboard deployment.  If we do update the
# Dashboard, then also update the Nginx favicon symlink.
podman unshare rm -r ${SRV_PBENCH}/public_html/dashboard
if [[ -d "${PB_DASHBOARD_DIR}" ]]; then
    podman run \
        --rm \
        --volume ${PB_DASHBOARD_DIR}:/dashboard:Z \
        --volume ${SRV_PBENCH}:/srv/pbench:Z \
        --entrypoint cp \
        ${PB_SERVER_IMAGE} \
        -r /dashboard /srv/pbench/public_html/dashboard
    podman run \
        --rm \
        --volume ${SRV_PBENCH}:/srv/pbench:Z \
        --entrypoint ln \
        ${PB_SERVER_IMAGE} \
        -sf ${NGINX_FAVICON} /srv/pbench/public_html/favicon.ico
else
    echo "Warning:  deploying the Pbench Server without a Dashboard" >&2
    podman run \
        --rm \
        --volume ${SRV_PBENCH}:/srv/pbench:Z \
        --entrypoint mkdir \
        ${PB_SERVER_IMAGE} \
        -m 0755 -p /srv/pbench/public_html/dashboard
fi

# Run the Pbench Server.
podman run \
    --detach \
    --name ${PB_SERVER_CONTAINER_NAME} \
    --network host \
    --pull ${PB_SERVER_IMAGE_PULL_POLICY} \
    --rm \
    --volume ${PB_DEPLOY_FILES}/etc/rsyslog.conf:/etc/rsyslog.conf:Z \
    --volume ${PB_DEPLOY_FILES}/etc/rsyslog.d:/etc/rsyslog.d:Z \
    --volume ${PB_DEPLOY_FILES}/pbench-server.cfg:/opt/pbench-server/lib/config/pbench-server.cfg:Z \
    --volume ${SRV_PBENCH}:/srv/pbench:Z \
    ${PB_SERVER_IMAGE}
