#!/bin/bash -e

#
# This script deploys a Pbench Server instance from a container image.
#
# Steps performed:
#   - The Pbench Dashboard application files are copied from the build directory
#     into the SRV_PBENCH file system.  (If the build directory does not exist,
#     an empty directory is created at the input and output locations, a warning
#     is printed, and the Pbench Server is deployed without a Dashboard.)
#   - If present in the current directory, the Nginx favicon file is copied into
#     the appropriate location in the SRV_PBENCH file system.
#   - The ownership of the files in the SRV_PBENCH file system will are set for
#     access inside the container.
#   - The Pbench Server container is started and run as a detached process.
#
# The key inputs are the following environment variables:
#   - PB_DEPLOY_FILES:  the location (on the host) of the configuration files
#                       for the Pbench Server and rsyslog.
#   - SRV_PBENCH:  the location of the file system (on the host) which will be
#                       mounted inside the container at /srv/pbench.
#
# Other inputs which can be provided by environment variables include:
#   - the name and pull policy for the Pbench Server container image
#   - the location of the Pbench Dashboard app files and the Nginx Favicon
#   - the location of the Pbench Git checkout (used to locate the above)
#
# In all cases, suitable defaults are provided for any value which is undefined.
#

#+
# Configuration
#-

# Pbench Server container image
PB_SERVER_IMAGE=${PB_SERVER_IMAGE:-"images.paas.redhat.com/pbench/pbench-server:main"}
PB_SERVER_IMAGE_PULL_POLICY=${PB_SERVER_IMAGE_PULL_POLICY:-"newer"}

# Locations on the host
PB_DASHBOARD_DIR=${PB_DASHBOARD_DIR:-${GITTOP:=$(git rev-parse --show-toplevel)}/dashboard/build}
NGINX_FAVICON=${NGINX_FAVICON:-${GITTOP:=$(git rev-parse --show-toplevel)}/server/lib/config/color-square.ico}
PB_DEPLOY_FILES=${PB_DEPLOY_FILES:-${HOME}/Deploy}
SRV_PBENCH=${SRV_PBENCH:-/srv/pbench}

#+
# Deployment
#-

# Update the dashboard code, removing any existing code and copying in fresh.
# We expect that the host dashboard directory already exists and contains a
# build of the Pbench Dashboard application; however, if it is missing, we
# deploy the Pbench Server without a Dashboard deployment.
podman unshare rm -r ${SRV_PBENCH}/public_html/dashboard
if [[ -d "${PB_DASHBOARD_DIR}" ]]; then
    podman unshare cp -r ${PB_DASHBOARD_DIR} ${SRV_PBENCH}/public_html/dashboard
else
    echo "Warning:  deploying the Pbench Server without a Dashboard" >&2
    podman unshare mkdir -m 0755 -p ${SRV_PBENCH}/public_html/dashboard
fi

# Update the Nginx favicon and provide some static fallback pages
podman unshare rm ${SRV_PBENCH}/public_html/favicon.ico
podman unshare cp ${NGINX_FAVICON} ${SRV_PBENCH}/public_html/favicon.ico
podman unshare cp /usr/share/nginx/html/404.html /usr/share/nginx/html/50x.html \
    ${SRV_PBENCH}/public_html/

# Ensure ${SRV_PBENCH} is owned by the "pbench" user INSIDE the container.
podman run --rm --volume ${SRV_PBENCH}:/srv/pbench:Z ${PB_SERVER_IMAGE} \
    chown -R pbench:pbench /srv/pbench

# Run the Pbench Server.
podman run \
    --detach \
    --name pbench-server \
    --network host \
    --pids-limit -1 \
    --pull ${PB_SERVER_IMAGE_PULL_POLICY} \
    --rm \
    --umask 0000 \
    --volume ${PB_DEPLOY_FILES}/etc/rsyslog.conf:/etc/rsyslog.conf:Z \
    --volume ${PB_DEPLOY_FILES}/etc/rsyslog.d:/etc/rsyslog.d:Z \
    --volume ${PB_DEPLOY_FILES}/pbench-server.cfg:/opt/pbench-server/lib/config/pbench-server.cfg:Z \
    --volume ${SRV_PBENCH}:/srv/pbench:Z \
    ${PB_SERVER_IMAGE}
