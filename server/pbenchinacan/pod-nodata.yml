#
# This configuration is intended to create a brand new (empty) Pbench Server
# deployment.  The resulting pod consists of four containers: the Pbench Server
# and its associated Elasticsearch, PostgreSQL database, and Keycloak
# authentication servers.
#
# Note: This pod produces an initial Pbench Server deployment which is
# pre-configured with a Keycloak realm and administrative user but which
# contains no Pbench assets.
#
# The Elasticsearch, PostgreSQL and Keycloak container images have specific
# versions and are pulled from cached images in an internal registry; the Pbench
# Server container image is pulled from the same registry with a configurable
# tag.
#
# The pod should be invoked via the following command
#
#    envsubst < server/pbenchinacan/pod-nodata.yml | podman play kube -
#
# with the following environment variables defined:
#
#  PB_POD_NAME - the name to be used for the pod
#  PB_INTERNAL_CONTAINER_REG - the FQDN of the container registry
#  PB_SERVER_IMAGE - the <registry>/<repo>/<img_name> of the Pbench Server image
#  PB_SERVER_IMAGE_TAG - the tag for the Pbench Server image
#
# The resulting pod exposes port 8080 for the Pbench Server and Dashboard, and
# port 8090 for the KeyCloak broker.
#
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-10-29T21:13:14Z"
  labels:
    app: pbenchserverinacan
  name: ${PB_POD_NAME}
spec:
  hostname: "pbenchinacan"
  containers:
  - args:
    - eswrapper
    command:
    - /bin/tini
    - --
    - /usr/local/bin/docker-entrypoint.sh
    env:
    - name: PATH
      value: /usr/share/elasticsearch/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    - name: ELASTIC_CONTAINER
      value: "true"
    - name: discovery.type
      value: "single-node"
    - name: xpack.security.enabled
      value: "false"
    image: ${PB_INTERNAL_CONTAINER_REG}/pbench/elasticsearch:7.13.3
    name: elasticsearch
    ports:
      - containerPort: 9200
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
      sysctls:
      - name: vm.max_map_count
        value: "262144"
    workingDir: /usr/share/elasticsearch
  - command:
    - /opt/keycloak/bin/kc.sh
    - start-dev
    - --http-port=8090
    - --health-enabled=true
    image: ${PB_INTERNAL_CONTAINER_REG}/pbench/pbenchinacan-keycloak:latest
    name: keycloak
    ports:
      - containerPort: 8090
        hostPort: 8090
    workingDir: /opt/keycloak
  - args:
    - run-postgresql
    command:
    - container-entrypoint
    env:
    - name: PATH
      value: /opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    - name: DESCRIPTION
      value: PostgreSQL is an advanced Object-Relational database management system
        (DBMS). The image contains the client and server programs that you'll need
        to create, run, maintain and access a PostgreSQL DBMS server.
    - name: STI_SCRIPTS_URL
      value: image:///usr/libexec/s2i
    - name: PGUSER
      value: postgres
    - name: PLATFORM
      value: el8
    - name: APP_DATA
      value: /opt/app-root
    - name: SUMMARY
      value: PostgreSQL is an advanced Object-Relational database management system
    - name: CONTAINER_SCRIPTS_PATH
      value: /usr/share/container-scripts/postgresql
    - name: ENABLED_COLLECTIONS
    - name: POSTGRESQL_VERSION
      value: "13"
    - name: APP_ROOT
      value: /opt/app-root
    - name: STI_SCRIPTS_PATH
      value: /usr/libexec/s2i
    - name: HOME
      value: /var/lib/pgsql
    - name: POSTGRESQL_USER
      value: pbenchcontainer
    - name: POSTGRESQL_PASSWORD
      value: pbench
    - name: POSTGRESQL_DATABASE
      value: pbenchcontainer
    image: ${PB_INTERNAL_CONTAINER_REG}/pbench/postgresql-13:latest
    name: postgresql
    ports:
      - containerPort: 5432
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsGroup: 26
      runAsUser: 26
      seLinuxOptions: {}
    workingDir: /opt/app-root/src
  - command:
    - /sbin/init
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    image: ${PB_SERVER_IMAGE}:${PB_SERVER_IMAGE_TAG}
    imagePullPolicy: Always
    name: pbenchserver
    ports:
      - containerPort: 8080
        hostPort: 8080
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    volumeMounts:
    - mountPath: /var/www/html/dashboard
      name: dashboard_deployment
    workingDir: /
  volumes:
  - name: dashboard_deployment
    hostPath:
      path: ${PB_DASHBOARD_DIR}
      type: DirectoryOrCreate
  dnsConfig: {}
  restartPolicy: Never
status: {}
