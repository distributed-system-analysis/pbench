#
# This configuration is intended to create a Pbench Server deployment containing
# pre-created users and data.  The resulting pod consists of three containers:
# the Pbench Server and its associated Elasticsearch and PostgreSQL database
# servers.  The expectation is that the servers have been pre-populated with
# data which has been persisted in their respective container images and that
# the images have been pushed to a common repository using a common tag.
#
# The three container images are named
#
#   pbenchinacan-pbenchserver
#   pbenchinacan-elasticsearch
#   pbenchinacan-postgresql
#
# and they are pulled from the `pbench` repository in a configurable registry.
#
# The pod should be invoked via the following command
#
#    envsubst < server/pbenchinacan/pod.yml | podman play kube -
#
# with the following environment variables defined:
#
#  PB_POD_NAME - the name to be used for the pod
#  PB_INTERNAL_CONTAINER_REG - the FQDN of the container registry
#  PB_SERVER_IMAGE_TAG - the tag for all three container images
#
# The resulting pod maps the following ports:
#
#   8080 - HTTP web server (and Pbench Dashboard)
#   8001 - Pbench Server RESTful API
#   9200 - Elasticsearch
#  55555 - ssh
#
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-10-29T21:13:14Z"
  labels:
    app: pbenchserverinacan
  name: ${PB_POD_NAME}
spec:
  hostname: "pbenchinacan"
  containers:
  - args:
    - eswrapper
    command:
    - /bin/tini
    - --
    - /usr/local/bin/docker-entrypoint.sh
    env:
    - name: PATH
      value: /usr/share/elasticsearch/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    - name: ELASTIC_CONTAINER
      value: "true"
    - name: discovery.type
      value: "single-node"
    - name: xpack.security.enabled
      value: "false"
    image: ${PB_INTERNAL_CONTAINER_REG}/pbench/pbenchinacan-elasticsearch:${PB_SERVER_IMAGE_TAG}
    name: elasticsearch
    ports:
      - containerPort: 9200
        hostPort: 9200
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
      sysctls:
      - name: vm.max_map_count
        value: "262144"
    workingDir: /usr/share/elasticsearch
  - args:
    - run-postgresql
    command:
    - container-entrypoint
    env:
    - name: PATH
      value: /opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    - name: DESCRIPTION
      value: PostgreSQL is an advanced Object-Relational database management system
        (DBMS). The image contains the client and server programs that you'll need
        to create, run, maintain and access a PostgreSQL DBMS server.
    - name: STI_SCRIPTS_URL
      value: image:///usr/libexec/s2i
    - name: PGUSER
      value: postgres
    - name: PLATFORM
      value: el8
    - name: APP_DATA
      value: /opt/app-root
    - name: SUMMARY
      value: PostgreSQL is an advanced Object-Relational database management system
    - name: CONTAINER_SCRIPTS_PATH
      value: /usr/share/container-scripts/postgresql
    - name: ENABLED_COLLECTIONS
    - name: POSTGRESQL_VERSION
      value: "13"
    - name: APP_ROOT
      value: /opt/app-root
    - name: STI_SCRIPTS_PATH
      value: /usr/libexec/s2i
    - name: HOME
      value: /var/lib/pgsql
    - name: POSTGRESQL_USER
      value: pbenchcontainer
    - name: POSTGRESQL_PASSWORD
      value: pbench
    - name: POSTGRESQL_DATABASE
      value: pbenchcontainer
    image: ${PB_INTERNAL_CONTAINER_REG}/pbench/pbenchinacan-postgresql:${PB_SERVER_IMAGE_TAG}
    name: postgresql
    ports:
      - containerPort: 5432
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsGroup: 26
      runAsUser: 26
      seLinuxOptions: {}
    workingDir: /opt/app-root/src
  - command:
    - /sbin/init
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    image: ${PB_INTERNAL_CONTAINER_REG}/pbench/pbenchinacan-pbenchserver:${PB_SERVER_IMAGE_TAG}
    name: pbenchserver
    ports:
      - containerPort: 22
        hostPort: 55555
      - containerPort: 80
        hostPort: 8080
      - containerPort: 8001
        hostPort: 8001
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    workingDir: /
  dnsConfig: {}
  restartPolicy: Never
status: {}
