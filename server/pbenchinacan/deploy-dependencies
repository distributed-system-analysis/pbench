#!/bin/bash -e

#
# Deploy containerized dependencies of a Pbench Server.
#
# This script creates a pod for a Pbench Server deployment running the services
# required by the Pbench Server:  an Elasticsearch instance, a PostgreSQL
# database instance, and a KeyCloak (OpenID Connect) instance.  After starting
# the dependent services, this script configures the KeyCloak broker.
#
# This script should be run from the root of the Git checkout.
#
# The resulting pod exports the following ports:
#   5432 - PostgreSQL
#   8090 - keycloak authentication server
#   9200 - Elasticsearch

# The default container registry to use with the organization name in that
# registry.  E.g., `quay.io/pbench`.
PB_CONTAINER_REG=${PB_CONTAINER_REG:-$(<${HOME}/.config/pbench/ci_registry.name)}

# Default pull policy for all images is to pull the image if the registry has a
# *different* version (despite the name -- different is assumed to be "newer").
PB_COMMON_IMAGE_PULL_POLICY=${PB_COMMON_IMAGE_PULL_POLICY:-"newer"}

# Each container has its own name and tag for the image as well as pull policy.
PB_ELASTICSEARCH_IMAGE_NAME=${PB_ELASTICSEARCH_IMAGE_NAME:-"elasticsearch"}
PB_ELASTICSEARCH_IMAGE_TAG=${PB_ELASTICSEARCH_IMAGE_TAG:-"7.13.3"}
PB_ELASTICSEARCH_IMAGE=${PB_CONTAINER_REG}/${PB_ELASTICSEARCH_IMAGE_NAME}:${PB_ELASTICSEARCH_IMAGE_TAG}
PB_ELASTICSEARCH_IMAGE_PULL_POLICY=${PB_ELASTICSEARCH_IMAGE_PULL_POLICY:-${PB_COMMON_IMAGE_PULL_POLICY}}

PB_POSTGRESQL_IMAGE_NAME=${PB_POSTGRESQL_IMAGE_NAME:-"postgresql-13"}
PB_POSTGRESQL_IMAGE_TAG=${PB_POSTGRESQL_IMAGE_TAG:-"latest"}
PB_POSTGRESQL_IMAGE=${PB_CONTAINER_REG}/${PB_POSTGRESQL_IMAGE_NAME}:${PB_POSTGRESQL_IMAGE_TAG}
PB_POSTGRESQL_IMAGE_PULL_POLICY=${PB_POSTGRESQL_IMAGE_PULL_POLICY:-${PB_COMMON_IMAGE_PULL_POLICY}}

PB_KEYCLOAK_IMAGE_NAME=${PB_KEYCLOAK_IMAGE_NAME:-"pbenchinacan-keycloak"}
PB_KEYCLOAK_IMAGE_TAG=${PB_KEYCLOAK_IMAGE_TAG:-"20.0.3"}
PB_KEYCLOAK_IMAGE=${PB_CONTAINER_REG}/${PB_KEYCLOAK_IMAGE_NAME}:${PB_KEYCLOAK_IMAGE_TAG}
PB_KEYCLOAK_IMAGE_PULL_POLICY=${PB_KEYCLOAK_IMAGE_PULL_POLICY:-${PB_COMMON_IMAGE_PULL_POLICY}}

# The overall pod name is derived from the pbench server image tag.
PB_POD_NAME=${PB_POD_NAME:-"pbench-in-a-can_${PB_SERVER_IMAGE_TAG}"}

CERT_LOCATION=${TMP_DIR:-"/var/tmp/pbench/"}

podman pod create --name ${PB_POD_NAME} -p 9200:9200 -p 5432:5432 -p 8090:8090

podman run \
  --rm \
  --name "${PB_POD_NAME}-elasticsearch" \
  --pod ${PB_POD_NAME} \
  --workdir /usr/share/elasticsearch \
  --pull ${PB_ELASTICSEARCH_IMAGE_PULL_POLICY} \
  --restart no \
  -v ${CERT_LOCATION}/elastic.crt:/usr/share/elasticsearch/config/certificates/elastic.crt:Z \
  -v ${CERT_LOCATION}/elastic.key:/usr/share/elasticsearch/config/certificates/elastic.key:Z \
  -e PATH=/usr/share/elasticsearch/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
  -e HOME=/root \
  -e TERM=xterm \
  -e container=oci \
  -e discovery.type=single-node \
  -e ES_JAVA_OPTS="-Xms1g -Xmx1g"\
  -e ELASTIC_PASSWORD="password" \
  -e xpack.security.enabled=true \
  -e xpack.security.http.ssl.enabled=true \
  -e xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/elastic.key \
  -e xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/elastic.crt \
  -e xpack.security.transport.ssl.enabled=true \
  -e xpack.security.transport.ssl.verification_mode=certificate \
  -e xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/elastic.crt \
  -e xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/elastic.key \
  -e ES_PORT=9200 \
  -d \
  ${PB_ELASTICSEARCH_IMAGE} \
  /bin/tini -- /usr/local/bin/docker-entrypoint.sh eswrapper

podman run \
  --rm \
  --pod ${PB_POD_NAME} \
  --name "${PB_POD_NAME}-postgres" \
  --workdir /opt/app-root/src \
  --pull ${PB_POSTGRESQL_IMAGE_PULL_POLICY} \
  --restart no \
  --entrypoint container-entrypoint \
  -v ${CERT_LOCATION}/postgres.crt:/var/lib/pgsql/data/postgres.crt:Z \
  -v ${CERT_LOCATION}/postgres.key:/var/lib/pgsql/data/postgres.key:Z \
  -e POSTGRESQL_USER=pbenchcontainer \
  -e POSTGRESQL_PASSWORD=pbench \
  -e POSTGRESQL_DATABASE=pbenchcontainer \
  -e HOME=/var/lib/pgsql \
  -e CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql \
  -e APP_ROOT=/opt/app-root \
  -e POSTGRESQL_VERSION="13" \
  -e PGUSER=postgres \
  -e STI_SCRIPTS_URL=image:///usr/libexec/s2i \
  -d \
  ${PB_POSTGRESQL_IMAGE} \
  run-postgresql -p 5432 -c ssl=on -c ssl_cert_file=/var/lib/pgsql/data/postgres.crt -c ssl_key_file=/var/lib/pgsql/data/postgres.key

podman run \
  --rm \
  --pod ${PB_POD_NAME} \
  --name "${PB_POD_NAME}-keycloak" \
  --pull ${PB_KEYCLOAK_IMAGE_PULL_POLICY} \
  --restart no \
  -v ${CERT_LOCATION}/keycloak.crt:/opt/keycloak/conf/keycloak.crt:Z \
  -v ${CERT_LOCATION}/keycloak.key:/opt/keycloak/conf/keycloak.key:Z \
  -e KEYCLOAK_ADMIN=admin \
  -e KEYCLOAK_ADMIN_PASSWORD=admin \
  -d \
  ${PB_KEYCLOAK_IMAGE} \
  start-dev --health-enabled=true --https-port=8090 --https-certificate-file=/opt/keycloak/conf/keycloak.crt --https-certificate-key-file=/opt/keycloak/conf/keycloak.key

server/pbenchinacan/load_keycloak.sh
