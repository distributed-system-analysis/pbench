#!/bin/bash -e

#
# Run a local containerized deployment of the Pbench Server, together with its
# dependencies.
#
# This script should be run from the root of the Git checkout.
#

# The default container registry to use with the organization name in that
# registry.  E.g., `quay.io/pbench`.  We export it (and the server image name)
# for the subordinate scripts to use.
export PB_CONTAINER_REG=${PB_CONTAINER_REG:-$(< ${HOME}/.config/pbench/ci_registry.name)}
server_image_name=${PB_SERVER_IMAGE_NAME:-"pbench-server"}
server_image_tag=${PB_SERVER_IMAGE_TAG:-"$(< jenkins/branch.name)"}
export PB_SERVER_IMAGE=${PB_CONTAINER_REG}/${server_image_name}:${server_image_tag}

# Default pull policy for all images is to pull the image if the registry has a
# *different* version (despite the name -- different is assumed to be "newer").
export PB_COMMON_IMAGE_PULL_POLICY=${PB_COMMON_IMAGE_PULL_POLICY:-"newer"}
export PB_SERVER_IMAGE_PULL_POLICY="${PB_SERVER_IMAGE_PULL_POLICY:-${PB_COMMON_IMAGE_PULL_POLICY}}"

# Directory to use for the fully built dashboard code.
export PB_DASHBOARD_DIR="${PB_DASHBOARD_DIR:-${PWD}/dashboard/build/}"

export KEYCLOAK_REALM=${KEYCLOAK_REALM:-"pbench-server"}
export KEYCLOAK_CLIENT=${KEYCLOAK_CLIENT:-"pbench-dashboard"}

# Set up TMP_DIR, if it's not already defined, to point to WORKSPACE_TMP, if it
# is defined (e.g., by the CI), or to `/var/tmp/pbench` as a fallback.
#
# Point SRV_PBENCH at a file tree in the temporary space which will be mapped
# into the Pbench Server container as /srv/pbench to provide all the storage for
# the Server and the Dashboard.
#
# Point PB_DEPLOY_FILES at a directory in the temporary space to hold the
# Pbench Server deployment files (e.g., config files).
TMP_DIR=${TMP_DIR:-${WORKSPACE_TMP:-/var/tmp/pbench}}
export SRV_PBENCH=${SRV_PBENCH:-${TMP_DIR}/srv/pbench}
export PB_DEPLOY_FILES=${PB_DEPLOY_FILES:-${TMP_DIR}/pbench_server_deployment}

# This function removes host files/directories which are owned by the pbench
# user inside the can and therefore may not be accessible outside the can.
function remove_from_can {
    # First, try to remove the target(s) from outside the container, but
    # suppress all errors.  If (any of) the target(s) still exist(s), try
    # removing it/them from inside the container; display the results, but
    # suppress error handling.  Finally, try again to remove the target(s) from
    # outside the container:  the result of this operation will be the return
    # status of the function (if the target(s) was/were successfully removed
    # inside the container, then this will result in a success status from this
    # function; otherwise, it will trigger an error if it is unsuccessful).
    local outside_dir=${1}; shift
    local inside_dir=${1}; shift

    pushd ${outside_dir} 1>/dev/null
    rm -rf "${@}" 1>/dev/null 2>&1 || true
    for d in "${@}"; do
        if [[ -e ${d} ]]; then
            podman run \
                --entrypoint rm \
                --pull ${PB_SERVER_IMAGE_PULL_POLICY} \
                --rm \
                --volume ${outside_dir}:${inside_dir}:Z \
                --workdir ${inside_dir}
                ${PB_SERVER_IMAGE} \
                -rf "${@}" \
                || true
            break  # The first call _should_ get them all; continuing is pointless.
        fi
    done
    rm -rf "${@}" && rv=0 || rv=1
    popd 1>/dev/null
    return ${rv}
}

# Copy the deployment files to the deployment files directory
pbiac_etc=server/pbenchinacan/etc
mkdir -p -m 755 ${PB_DEPLOY_FILES}/etc
rm -rf ${PB_DEPLOY_FILES}/etc/*
cp -r ${pbiac_etc}/rsyslog.d ${pbiac_etc}/rsyslog.conf ${PB_DEPLOY_FILES}/etc/
cp ${pbiac_etc}/pbench-server/pbench-server.cfg ${PB_DEPLOY_FILES}/

# Customize the Pbench Server config file for canned operation
sed -Ei \
    -e "/^ *realhost/ s/=.*/= $(hostname -f)/" \
    -e "s/<keycloak_realm>/${KEYCLOAK_REALM}/" \
    -e "s/<keycloak_client>/${KEYCLOAK_CLIENT}/" \
    ${PB_DEPLOY_FILES}/pbench-server.cfg

# Set up the /srv/pbench file tree
remove_from_can ${SRV_PBENCH} /srv/pbench "*"
mkdir -p -m 0755  \
    ${SRV_PBENCH}/archive/fs-version-001 \
    ${SRV_PBENCH}/public_html/dashboard \
    ${SRV_PBENCH}/tmp \
    ${SRV_PBENCH}/cache

# Start the services which the Pbench Server depends upon and then start the
# Pbench Server itself.
server/pbenchinacan/deploy-dependencies
server/pbenchinacan/deploy
