#! /bin/bash

prog=$(basename $0)

pbench_incoming_dir=$(getconf.py pbench-incoming-dir pbench-server)
if [ -z "${pbench_incoming_dir}" ]; then
    echo "$prog: \"pbench-incoming-dir\" is undefined in section \"pbench-server\" of config file." >&2
    exit 1
fi
pbench_results_dir=$(getconf.py pbench-results-dir pbench-server)
if [ -z "${pbench_results_dir}" ]; then
    echo "$prog: \"pbench-results-dir\" is undefined in section \"pbench-server\" of config file." >&2
    exit 1
fi
pbench_users_dir=$(getconf.py pbench-users-dir pbench-server)
if [ -z "${pbench_users_dir}" ]; then
    echo "$prog: \"pbench-users-dir\" is undefined in section \"pbench-server\" of config file." >&2
    exit 1
fi
pbench_static_dir=$(getconf.py pbench-static-dir pbench-server)
if [ -z "${pbench_static_dir}" ]; then
    echo "$prog: \"pbench-static-dir\" is undefined in section \"pbench-server\" of config file." >&2
    exit 1
fi
docroot=$(getconf.py documentroot apache)
if [ -z "${docroot}" ]; then
    echo "$prog: \"documentroot\" is undefined in section \"apache\" of config file." >&2
    exit 1
fi

# FIXME: This script will need mods for non-systemd, non-apache,
# and non-firewalld environments.

res=0
systemctl enable httpd.service
let res=res+$?
systemctl start httpd.service
let res=res+$?

# open up the port permanently
firewall-cmd --add-service=http
let res=res+$?
firewall-cmd --permanent --add-service=http
let res=res+$?

# it's OK if this fails: the links might already exist.
ln -s \
        ${pbench_incoming_dir} \
        ${pbench_results_dir} \
        ${pbench_users_dir} \
        ${pbench_static_dir} \
        ${docroot} 2>/dev/null
exit $res
