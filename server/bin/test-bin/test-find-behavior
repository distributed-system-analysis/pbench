#!/bin/bash

ARCHIVE=${_testdir}/archive

SMALL=0      #   0 <= - < 130   90%
MEDIUM=130   # 130 <= - < 240   95%
LARGE=240    # 240 <= - < 820   99%
HUGE=820     # 820 <= - < INF  100%

# We need to test the behavior of find to see how it works with sizes on
# the boundaries.

mkdir ${ARCHIVE}/dir0
truncate -s $(( ${MEDIUM} - 1 )) ${ARCHIVE}/dir0/edge-ub.sml    # Upper bound of SMALL
truncate -s ${MEDIUM}            ${ARCHIVE}/dir0/boundary.med   # Boundary of SMALL/MEDIUM, placed in MEDIUM
truncate -s $(( ${MEDIUM} + 1 )) ${ARCHIVE}/dir0/edge-lb.med    # One beyond MEDIUM boundary
mkdir ${ARCHIVE}/dir1
truncate -s $(( ${LARGE} - 1 ))  ${ARCHIVE}/dir1/edge-ub.med    # Upper bound of MEDIUM
truncate -s ${LARGE}             ${ARCHIVE}/dir1/boundary.lrg   # Boundary of MEDIUM/LARGE, placed in LARGE
truncate -s $(( ${LARGE} + 1 ))  ${ARCHIVE}/dir1/edge-lb.lrg    # One beyond LARGE boundary
mkdir ${ARCHIVE}/dir2
truncate -s $(( ${HUGE} - 1 ))   ${ARCHIVE}/dir2/edge-ub.lrg    # Upper bound of LARGE
truncate -s ${HUGE}              ${ARCHIVE}/dir2/boundary.hug   # Boundary of LARGE/HUGE, placed in HUGE
truncate -s $(( ${HUGE} + 1 ))   ${ARCHIVE}/dir2/edge-lb.hug    # One beyond HUGE boundary

# We have three directories, each with a boundary file, now add one other file
# in each of the buckets per directory.

for dir in dir0 dir1 dir2; do
    truncate -s $(( ${SMALL}  + 10 )) ${ARCHIVE}/${dir}/file.sml
    truncate -s $(( ${MEDIUM} + 10 )) ${ARCHIVE}/${dir}/file.med
    truncate -s $(( ${LARGE}  + 10 )) ${ARCHIVE}/${dir}/file.lrg
    truncate -s $(( ${HUGE}   + 10 )) ${ARCHIVE}/${dir}/file.hug
done

find -L ${ARCHIVE} \
       \( -type f                              -size -${MEDIUM}c -fprintf small.lis  "%s %p\n" \) \
    -o \( -type f -size +$(( ${MEDIUM} - 1 ))c -size -${LARGE}c  -fprintf medium.lis "%s %p\n" \) \
    -o \( -type f -size +$(( ${LARGE}  - 1 ))c -size -${HUGE}c   -fprintf large.lis  "%s %p\n" \) \
    -o \( -type f -size +$(( ${HUGE}   - 1 ))c                   -fprintf huge.lis   "%s %p\n" \) \
    2>/dev/null

tot_files=$(find ${ARCHIVE} -type f | wc -l)
bkt_files=$(cat *.lis | wc -l)

if [[ "${bkt_files}" != "${tot_files}" ]]; then
    print "Count of files in buckets, %d, does not match total number of files, %d\n" "${bkt_files}" "${tot_files}"
fi

declare -A lb=(
    [small]=${SMALL}
    [medium]=${MEDIUM}
    [large]=${LARGE}
    [huge]=${HUGE}
    )
declare -A ub=(
    [small]=${MEDIUM}
    [medium]=${LARGE}
    [large]=${HUGE}
    [huge]="INF"
    )
for bucket in small medium large huge; do
    printf "\nBucket: %s -- %s <= size < %s\n" "${bucket}" "${lb[${bucket}]}" "${ub[${bucket}]}"
    sort ${bucket}.lis
    rm -f ${bucket}.lis
done
