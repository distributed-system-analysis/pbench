#!/bin/bash

cd $(dirname $0)
cat > mock/datastoreConfig.js <<EOF
export default {
  '/dev/datastoreConfig': {
    elasticsearch: 'http://test_domain.com',
    results: 'http://test_domain.com',
    graphql: 'http://test_domain.com',
    prefix: 'test_prefix.',
    run_index: 'test_index.',
  },
};
EOF
yarn --network-timeout 1000000
if [[ $? -ne 0 ]]; then
  echo "yarn failed!" >&2
  exit 1
fi
printf -- "NODE_ENV=%s\n" "${NODE_ENV}"
yarn start &
if [[ $? -ne 0 ]]; then
  echo "yarn failed!" >&2
  exit 1
fi
# Wait checking once a second for the web-server to show up on port
# 8000 at the expected URL.
curl_cmd="curl --output /dev/null --head --silent --fail"
while true; do
  sleep 1
  if ${curl_cmd} "http://localhost:8000/dashboard/"; then
    break
  fi
done
curl -X GET http://localhost:8000/dashboard/
res=${?}

# Now that the web server is running in the background, we can run
# the E2E tests which drive a headless browser against our server.
yarn test:e2e
res=${?}
if [[ ${res} -ne 0 ]]; then
  echo "yarn e2e tests failed!" >&2
fi
exit ${res}
