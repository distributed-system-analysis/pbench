#!/bin/bash

script_path=`dirname $0`
script_name=`basename $0`
pbench_bin="`cd ${script_path}/..; /bin/pwd`"

# source the base script
. "$pbench_bin"/base

# The sole purpose of this script is to ensure a peeformance tool
# of your choosing is NOT used during the execution of a benchmark.
# For a list of performance tools, look at the
# $pbench_bin/tool-scripts directory.

# Defaults
name=nothing
group=default

# Process options and arguments

opts=$(getopt -q -o n:g: --longoptions "remote:,name:,group:" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
	printf "\n"
	printf "$script_name: you specified an invalid option\n\n"
	printf "The following options are available:\n\n"
	printf -- "\t-n str --name=str, str can be one of:\n"
	printf "`/bin/ls $pbench_bin/tool-scripts | sed -e 's/\(.*\)/\t\t\t\1/'`\n"
	printf "\n"
	printf -- "\t-g str --group=str, str = a tool group used in a benchmark\n"
	printf -- "\t                          (the default group is 'default')\n"

	exit 1
fi
eval set -- "$opts";
while true; do
	case "$1" in
		-n|--name)
		shift;
		if [ -n "$1" ]; then
			name="$1"
			shift;
		fi
		;;
		-g|--group)
		shift;
		if [ -n "$1" ]; then
			group="$1"
			shift;
		fi
		;;
		-r|--remote)
		shift;
		if [ -n "$1" ]; then
			remote="$1"
			shift;
		fi
		;;
		--)
		shift;
		break;
		;;
	esac
done

## Remove this pertool
if [ -z $remote ]; then
	if [ -f "$pbench_run/tools.$group" ]; then
		# remove any existing entry for this perftool
		if grep -q "^$name:" "$pbench_run/tools.$group"; then
			sed -i /^$name.*/d "$pbench_run/tools.$group" 
		else
			printf "\n$script_name: The perftool, $name, was not found in group $group.\n"
		fi
	else
		printf "\n$script_name: The group [$group] does not exist, so the tool [$name] cannot be unregistered.  These groups currently exist:\n `/bin/ls $pbench_run | grep ^perftool | sed -e s/^tools\.//`\n"
	fi
else # run on remote host
        cmd=". ${pbench_install_dir}/profile; $script_name --name=$name --group=$group"
        ssh $ssh_opts $remote "$cmd" | sed -e 's/\(.*\)/'[$remote]'\1/g'
        rc=$?
	# if there are no more tools on the remote host, then remove the 'remote@' entry for that host on the local tools file
	remote_tools=`ssh $ssh_opts $remote list-tools | grep $group | awk -F: '{print $2}'`
	echo remote tools: [$remote_tools]
	if [ -z "$remote_tools" ]; then
		echo removing remote hostname $remote
		sed -i /'^remote@'$remote:/d "$pbench_run/tools.$group"
	fi
fi

