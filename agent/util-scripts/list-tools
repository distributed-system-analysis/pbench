#!/bin/bash

script_path=`dirname $0`
script_name=`basename $0`
pbench_bin="`cd ${script_path}/..; /bin/pwd`"

# source the base script
. "$pbench_bin"/base

# This script can list all tools from all groups,
# list tools from a specific group, or list which
# groups contain a specific tool

# Defaults
name=""
group=""
with_options=0

# Process options and arguments

opts=$(getopt -q -o tn:og: --longoptions "with-options,name:,group:" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
	printf "\n"
	printf "$script_name: you specified an invalid option\n\n"
	printf "The following options are available (use neither, one, or the other, but not both):\n\n"
	printf -- "\t-n str --name=str, list the perftool groups which str is used\n"
	printf "\n"
	printf -- "\t-g str --group=str, list the tools used in this str\n"
	printf "\n"
	printf -- "\t-o --with-options, list the options with each tool\n"


	exit 1
fi
eval set -- "$opts";
while true; do
	case "$1" in
		-n|--name)
		shift;
		if [ -n "$1" -a "$group" = "" ]; then
			name="$1"
			shift;
		else
			printf "You cannot specify both group and a name\n"
			exit 1
		fi
		;;
		-g|--group)
		shift;
		if [ -n "$1" -a "$name" = "" ]; then
			group="$1"
			shift;
		else
			printf "You cannot specify both group and a name\n"
			exit 1
		fi
		;;
		-o|--with-options)
		shift;
		with_options=1
		with_options_opt="--with-options" # used if we ssh for remote list
		;;
		--)
		shift;
		break;
		;;
                *)
                    break
                    ;;
	esac
done
if [ -d "$pbench_run" ]; then
	pushd "$pbench_run" >/dev/null
	if [ -z $name ]; then
		# list tools in one or all groups
		if [ -z "$group" ]; then
			groups=`/bin/ls tools.* 2>/dev/null | sed -e s/^tools\.//g`
		else
			groups="$group"
		fi
		for group in $groups; do
			tools=""
			for tool in `cat tools.$group | grep -v "^label:" | awk -F: '{print $1}'`; do
				if echo $tool | grep -q "@"; then
                                	remote_host=`echo $tool | awk -F@ '{print $2}'`
                                	tool=`echo $tool | awk -F@ '{print $1}'`
                                	remote_tools=`ssh $ssh_opts -n $remote_host ". ${pbench_install_dir}/profile; list-tools $with_options_opt --group=$group" | sed -e s/"^$group: "//`
					tools=",$remote_host[$remote_tools]$tools"
                        	else
					if [ $with_options -eq 1 ]; then
						tool="$tool `grep ^$tool tools.$group | cut -d: -f2-`"
					fi
					tools=",$tool$tools"
                        	fi
			done
			tools=`echo $tools | sed -e s/"^,"//`
			# do not print anything for this group if there are no tools
			if [ ! -z "$tools" ]; then
				printf "%s: %s\n" "$group" "$tools"
			fi
		done
	else 
		# list the groups which include this tool
		for group in `/bin/ls tools.* 2>/dev/null | sed -e s/^tools\.//g`; do
			if grep -q "^$name\|" tools.$group; then
				groups="$groups $group"
			fi
		done
		printf "name: $name groups: $groups\n"
	fi
	popd >/dev/null
fi
