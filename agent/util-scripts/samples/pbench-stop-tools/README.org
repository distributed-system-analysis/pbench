* Conventions uses for the pbench-stop-tools unit tests

These unit tests test (mostly) the safe_kill) function in tool-scripts/kvm-spinlock
(and all the tools that link to that). The basic premise is that we fake the environment
as if pbench-start-tools had been called, and then call pbench-stop-tools. pidof and kill
are mocked in the test-bin directory). kill is a bash builtin, so I disabled it in the
base file conditionally when _PBENCH_UNIT_TESTS is set to 1 (which is set in the unittests
scripts). The base file is sourced by every other script, so the built-in kill is disabled
everywhere and the mock version controls.

The following conventions are followed:

- Since pbench-stop-tools calls the tool stop scripts asynchronously,
  the order of the various entries in the output can vary. To get
  around this problem, each unit test deals with a single tool.

- The safe_kill function deals with the following possibilities:

  + the stored pid is used to kill the tool successfully - no
    instances of that tool remain: return success.

  + the stored pid is used to kill the tool successfully - other
    instances of that tool are still running: issue warning and return
    success.

  + the stored pid is used to kill the tool unsuccessfully - other
    instances of the tool may or may not be running (a warning is
    issued if necessary): try to kill the pid with the KILL signal
    and return failure (status=2).

- The mock pidof and kill commands simulate the various situations as
  follows:

  + pidof turbostat returns a list of two pids to simulate two instances
    running: 123463 and 123464. The former is the stored pid for turbostat
    and it also causes kill to fail unless called with a KILL signal.

  + pidof kvmstat returns one pid: 123463, the "unkillable" pid.

  + =pidof kvmtrace= and =pidof iostat= returns a list of "killable" pids.

  + =pidof numastat= and =pidof sar=  returns one "killable" pid.

Currently, iostat/sar do not go through safe_kill: they call kill directly
and do not check the result. Assuming no problems are found with safe_kill,
every tool is going to use it.

* Test cases 
- test-05: turbostat
- test-06: kvmstat
- test-07: kvmtrace
- test-08: numastat
- test-09: iostat
- test-10: sar



