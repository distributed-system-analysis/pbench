#!/bin/bash

script_path=`dirname $0`
script_name=`basename $0`
pbench_bin="`cd ${script_path}/..; /bin/pwd`"

# source the base script
. "$pbench_bin"/base

# Perftool scripts must provide the following functions
# 1) Install the tool
# 2) Start data collection
# 3) Stop data collection
# 4) post-process the data

# Defaults
tool=tcpdump
tool_bin=/usr/sbin/$tool
group=default
dir="/tmp"
mode=""
iteration="1"
options="none"

# Process options and arguments
opts=$(getopt -o d --longoptions "dir:,group:,iteration:,interface:,packets:,start,stop,install,postprocess" -n "getopt.sh" -- "$@");
if [ $? -ne 0 ]; then
    printf "\n"
    printf "$script_name: you specified an invalid option\n\n"
    printf "The following options are available: \n\n"
    printf -- "\t--install,         install this tcpdump tool\n"
    printf "\n"
    printf -- "\t--start|stop|postprocess   start/stop/post-process the data collection\n"
    printf -- "\t--iteration=int        the iteration (required)\n"
    printf -- "\t--group=str        the tcpdumptool group (required)\n"
    printf -- "\t--dir=str          directory to store data collection (required)\n"
    printf -- "\t--interface=str    interface to sniff\n"
    #printf -- "\t--delay=int        Time in seconds to wait to being collecton\n"
    printf -- "\t--packets=int     Number of packets to capture before exiting\n"
    exit 1
fi
eval set -- "$opts";
while true; do
    case "$1" in
        --install)
        mode="install"
        shift;
        ;;
        --start)
        mode="start"
        packets=500
        shift;
        ;;
        --stop)
        mode="stop"
        shift;
        ;;
        --postprocess)
        mode="postprocess"
        shift;
        ;;
        -d|--dir)
        shift;
        if [ -n "$1" ]; then
            dir="$1"
            shift
        fi
        ;;
        -g|--group)
        shift;
        if [ -n "$1" ]; then
            group="$1"
            shift
        fi
        ;;
        -i|--iteration)
        shift;
        if [ -n "$1" ]; then
            iteration="$1"
            shift
        fi
        ;;
        -p|--packets)
        shift;
        if [ -n "$1" ]; then
            packets="$1"
            shift
        fi
        ;;
        -n|--interface)
        shift;
        if [ -n "$1" ]; then
            interface="$1"
            shift
        fi
        ;;
        --)
        shift;
        break;
        ;;
    esac
done
tool_dir="$dir/tools-$group"
tool_output_dir=$tool_dir/$tool # all tools keep data in their tool specific dir
tool_cmd_file="$tool_output_dir/$tool.cmd"
tool_pid_file=$pbench_tmp/$group.$iteration.$tool.pid
tool_output_file=$tool_output_dir/$tool.txt
tool_cmd="$tool_bin -c $packets -ni $interface -w $tool_output_file"
case "$mode" in
	install)
	;;
	start)
	mkdir -p $tool_output_dir
	echo "$tool_cmd" >$tool_cmd_file
	debug_log "$script_name: running $tool_cmd"
	$tool_cmd >>"$tool_output_file" & echo $! >$tool_pid_file
	wait
        ;;
	stop)
        pid=`cat "$tool_pid_file"`
        debug_log "stopping $script_name"
        kill -SIGINT $pid && /bin/rm "$tool_pid_file"
        ;;
	postprocess)
	;;
esac
