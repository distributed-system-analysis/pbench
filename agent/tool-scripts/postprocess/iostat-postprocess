#!/usr/bin/perl

# Author: Andrew Theurer
#
# usage: iostat-postprocess <dir>  dir = directory where iostat.txt can be found
# iostat.txt must be generated from "iostat -N -t -y -x -m <interval>"
#
# The purpose of this script is to
# -output the chart data in JSON format (iostat.js)
# -output html file (iostat.html) with embedded javascript, using d3.js libraries
# The result should be several iostat graphs

use strict;
use warnings;

use lib $ENV{'pbench_lib_dir'};
no lib ".";
use GenData qw(gen_data);

my $tool_dir = $ARGV[0];
my $dev;
my %iostat;
my $timestamp;
my $timestamp_ms;

# read the iostat.txt
open(IOSTAT_TXT, $tool_dir . "/iostat-stdout.txt") || die "could not find " . $tool_dir . "/iostat-stdout.txt\n";
while (my $line = <IOSTAT_TXT>) {
	chomp $line;
	# Each sample should start with a time stamp (the -t in iostat).
	# When we find this, update our timestamp for the hash.
	if ( $line =~ /^\d\d\/\d\d\/\d\d(\d\d)?\s\d\d:\d\d:\d\d(\s[AP]M)?/ ) {
		$timestamp=`date --date="$line" +%s.%N`;
		# Elasticsearch requires the timestamp to be in milliseconds
		$timestamp_ms = $timestamp * 1000;
	}
	#     1    2    3     4     5      6      7     8     9      10      11     12       13       14    15    16
	#Device  r/s  w/s rMB/s wMB/s rrqm/s wrqm/s %rrqm %wrqm r_await w_await aqu-sz rareq-sz wareq-sz svctm %util
	#sdc    0.00 0.00  0.00  0.00   0.00   0.00  0.00  0.00    0.00    0.00   0.00     0.00     0.00  0.00  0.00
	#
	#                 1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16
	#                            r/s          w/s        rMB/s        wMB/s       rrqm/s       wrqm/s        %rrqm        %wrqm      r_await      w_await       aqu-sz     rareq-sz     wareq-sz        svctm        %util
	if ( $line =~ /(\S+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)\s+(\d+\.\d+)(.*)/ ) {
		$dev = $1;
		my $riops=$2;
		my $wiops=$3;
		my $rtput=$4;
		my $wtput=$5;
		my $rrqm=$6;
		my $wrqm=$7;
		# %rrqm - percent read rq merged -- ignored
		# %wrqm - percent write rq merged -- ignored
		my $rwait=$10;
		my $wwait=$11;
		my $qsize=$12;
		my $reqsize=(($13 + $14) * 2);  # Convert kB to 512 byte sectors
		my $rrqsize=$13;
		my $wrqsize=$14;
		# svctm skipped, bogus stat
		my $util=$16;

		# data is stored this way:
		# $iostat{htmlpage}{graph}{series}{sample}

		# Each data series is for one device (sda).  On some graphs, read and write
		# series are included in to one graph (instead of having one read-ops chart
		# and another write-ops chart), so each series needs "-read" or
		# "-write" appended to keep them distinct.

		$iostat{disk}{"Utilization_percent"}{$dev}{$timestamp_ms} = $util;
		$iostat{disk}{"Throughput_MB_per_sec"}{$dev . "-read"}{$timestamp_ms} = $rtput;
		$iostat{disk}{"Throughput_MB_per_sec"}{$dev . "-write"}{$timestamp_ms} = $wtput;
		$iostat{disk}{"Request_Merges_per_sec"}{$dev . "-read"}{$timestamp_ms} = $rrqm;
		$iostat{disk}{"Request_Merges_per_sec"}{$dev . "-write"}{$timestamp_ms} = $wrqm;
		$iostat{disk}{"IOPS"}{$dev . "-read"}{$timestamp_ms} = $riops;
		$iostat{disk}{"IOPS"}{$dev . "-write"}{$timestamp_ms} = $wiops;
		$iostat{disk}{"Request_Size_in_512_byte_sectors"}{$dev}{$timestamp_ms} = $reqsize;
		$iostat{disk}{"Request_Size_in_kB"}{$dev . "-read"}{$timestamp_ms} = $rrqsize;
		$iostat{disk}{"Request_Size_in_kB"}{$dev . "-write"}{$timestamp_ms} = $wrqsize;
		$iostat{disk}{"Queue_Size"}{$dev}{$timestamp_ms} = $qsize;
		$iostat{disk}{"Wait_Time_msec"}{$dev . "-read"}{$timestamp_ms} = $rwait;
		$iostat{disk}{"Wait_Time_msec"}{$dev . "-write"}{$timestamp_ms} = $wwait;
	}
}
close(IOSTAT_TXT);

# define the graph types
# if you want something other than lineChart, put it here
my %graph_type;

# threshold for displying a series in a graph
my %graph_threshold;
$graph_threshold{disk}{"Utilization_percent"} = 1;
$graph_threshold{disk}{"Throughput_MB_per_sec"} = 1;
$graph_threshold{disk}{"IOPS"} = 1;
$graph_threshold{disk}{"Wait_Time_msec"} = 0.1;
$graph_threshold{disk}{"Request_Size_in_512_byte_sectors"} = 0.1;
$graph_threshold{disk}{"Request_Size_in_kB"} = 0.1;
$graph_threshold{disk}{"Request_Merges_per_sec"} = 0.1;
$graph_threshold{disk}{"Queue_Size"} = 0.01;

gen_data(\%iostat, \%graph_type, \%graph_threshold, $tool_dir);
