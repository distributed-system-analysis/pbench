#!/usr/bin/env python2

import time
import sys, json
import os,subprocess,warnings,logging

interval = int(sys.argv[2])
host = sys.argv[1]
tool_log = sys.argv[3]
port = int(sys.argv[4])
cert = sys.argv[5]
key = sys.argv[6]
while True:
    time_stamp = int(time.time())
    next_start = time_stamp + interval
    if (cert == "None") or (key == "None"):
        command = "prom2json http://%s:%d/metrics" % (host, port)
    else:
        command = "prom2json --cert=%s --key=%s https://%s:%d/metrics" % (cert, key, host, port)
    command_out = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)
    prom2json_out = command_out.communicate()[0]
    metrics_list = json.loads(prom2json_out)
    if type(metrics_list) is list:
        for item in metrics_list:
            del item['help']
            item["@timestamp"] = time_stamp
            print json.dumps(item)
        endtime = time.time()
        if endtime > next_start:
            logging.warn("[%d] [prometheus-metrics] please change the interval to atleast %d seconds\n" %(time_stamp, endtime - next_start))
        if endtime < next_start:
            time.sleep(next_start - endtime)
    else:
        logging.warn("json.load(prom2json_out) did not return a list")
