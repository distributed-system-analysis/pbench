#!/usr/bin/env python3

import json
import logging
import os
import sys

PROG = os.path.basename(sys.argv[0])
try:
    inv_file = sys.argv[1]
except IndexError:
    logging.error("[%s]: missing required inventory file argument", PROG)
    sys.exit(1)
else:
    if not os.path.exists(inv_file):
        logging.error(
            "[%s]: the provided inventory file, '%s', does" " not exist", PROG, inv_file
        )
        sys.exit(1)

try:
    from ansible.parsing.dataloader import DataLoader
    from ansible.inventory.manager import InventoryManager
except ImportError as exc:
    logging.error(
        "[%s]: required Ansible python3 modules not available, '%s'", PROG, exc
    )
    sys.exit(1)

try:
    data_loader = DataLoader()
    inventory = InventoryManager(loader=data_loader, sources=[inv_file])
except Exception as exc:
    logging.error("[%s]: invalid ansible inventory file, '%s': %s", PROG, inv_file, exc)
    sys.exit(1)

try:
    groups = inventory.get_groups_dict()
except Exception as exc:
    logging.error(
        "[%s]: error processing groups in ansible inventory file," " '%s': %s",
        PROG,
        inv_file,
        exc,
    )
    sys.exit(1)

try:
    masters = groups["masters"]
    nodes = groups["pprof"]
except KeyError as exc:
    logging.error(
        "[%s]: missing expected group in ansible inventory file," " '%s': %s",
        PROG,
        inv_file,
        exc,
    )
    sys.exit(1)

doc = dict(masters=masters, nodes=nodes)
print(json.dumps(doc, sort_keys=True, indent=4))
