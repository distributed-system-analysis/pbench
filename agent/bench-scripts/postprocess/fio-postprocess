#!/usr/bin/perl
use strict;
use warnings;
use JSON;

my $dir = $ARGV[0];
my $iteration = $ARGV[1];
my $tool_group = $ARGV[2];
my $js_str;

open( JS, "<$dir/fio-result.txt" ) or die "Can't open $dir/fio-result.txt: $!";
# there may be more than one json array, and we want only the last one
while ( <JS> ) {
	# skip past the non json stuff
	if ( /{/ ) {
		$js_str = "{\n";
		while ( <JS> ) {
			$js_str = $js_str . $_;
			if ( /^}/ ) {
				last;
			}
		}
	}
}

if ( ! defined $js_str ) {
	print "Could not find any json data, exiting\n";
	exit 1
}

# convert [json] string in to big hash
my $fio_results;
$fio_results = decode_json $js_str;
close(JS);
my %results;
my %all_job_results;
my %all_client_results;
my $client_jobs = "";
my $job_name = "";
my $fio_json_field = "";
my $client_name = "";
if ( defined $$fio_results{"client_stats"} ) {
	# this is a multi-client test
	$fio_json_field = "client_stats";
} else {
	# this is a local test
	$fio_json_field = "jobs";
	$client_name = "localhost";
}

# reorg this data in a format better suited for printing a summary
foreach $client_jobs ( @$fio_results{$fio_json_field} ) {
	my $job;
	foreach $job ( @$client_jobs ) {
		$job_name = $$job{jobname};
		if ( $job_name ne "All clients" ) {
			if ($client_name ne "localhost" ) {
				$client_name = $$job{hostname};
			}

			my $read_iops = $$job{read}{iops};
			my $read_runtime = $$job{read}{runtime};
			my $read_KB =  $$job{read}{"io_bytes"};
			my $read_bw;
			if ($read_runtime <= 0) {
				$read_bw = 0;
			} else {
				$read_bw = 1000 * $read_KB / $read_runtime;
			}
			my $read_95lat = $$job{read}{clat}{percentile}{"95.000000"};

			my $write_iops = $$job{write}{iops};
			my $write_runtime = $$job{write}{runtime};
			my $write_KB = $$job{write}{"io_bytes"};
			my $write_bw;
			if ($write_runtime <= 0) {
				$write_bw = 0;
			} else {
				$write_bw = 1000 * $write_KB / $write_runtime;
			}
			my $write_95lat = $$job{write}{clat}{percentile}{"95.000000"};

			my $readwrite_iops = $read_iops + $write_iops;
			my $readwrite_bw = $read_bw + $write_bw;


			# we sum up values for all_*_results here
			# some values like 95lat need to be divided by their num samples to get an average
			$results{$client_name}{$job_name}{read_iops} = $read_iops;
			$all_job_results{$client_name}{read_iops} += $read_iops;
			$all_client_results{read_iops} += $read_iops;
			$results{$client_name}{$job_name}{read_bw} = $read_bw;
			$all_job_results{$client_name}{read_bw} += $read_bw;
			$all_client_results{read_bw} += $read_bw;
			$results{$client_name}{$job_name}{read_95lat} = $read_95lat;
			$all_job_results{$client_name}{read_95lat} += $read_95lat;
			$all_job_results{$client_name}{read_95lat_samples}++;
			$all_client_results{read_95lat} += $read_95lat;
			$all_client_results{read_95lat_samples}++;

			$results{$client_name}{$job_name}{write_iops} = $write_iops;
			$all_job_results{$client_name}{write_iops} += $write_iops;
			$all_client_results{write_iops} += $write_iops;
			$results{$client_name}{$job_name}{write_bw} = $write_bw;
			$all_job_results{$client_name}{write_bw} += $write_bw;
			$all_client_results{write_bw} += $write_bw;
			$results{$client_name}{$job_name}{write_95lat} = $write_95lat;
			$all_job_results{$client_name}{write_95lat} += $write_95lat;
			$all_job_results{$client_name}{write_95lat_samples}++;
			$all_client_results{write_95lat} += $write_95lat;
			$all_client_results{write_95lat_samples}++;

			$results{$client_name}{$job_name}{readwrite_iops} = $readwrite_iops;
			$all_job_results{$client_name}{readwrite_iops} += $readwrite_iops;
			$all_client_results{readwrite_iops} += $readwrite_iops;
			$results{$client_name}{$job_name}{readwrite_bw} = $readwrite_bw;
			$all_job_results{$client_name}{readwrite_bw} += $readwrite_bw;
			$all_client_results{readwrite_bw} += $readwrite_bw;
		}
	}
}

# now write all of this data to various files

# this file we start from scratch
open(RESULT_TXT, ">$dir/result.txt");
open(ITERATION_TXT, ">$dir/summary-result.txt");
open(ITERATION_HTML, ">$dir/summary-result.html");

printf RESULT_TXT "readwrite_IOPS=%.2f\n", $all_client_results{readwrite_iops};
printf RESULT_TXT "rw_kB_sec=%.2f\n", $all_client_results{readwrite_bw};
printf RESULT_TXT "read_IOPS=%.2f\n", $all_client_results{read_iops};
printf RESULT_TXT "read_kB_sec=%.2f\n", $all_client_results{read_bw};
printf RESULT_TXT "read_95th_lat_us=%.2f\n", $all_client_results{read_95lat};
printf RESULT_TXT "write_IOPS=%.2f\n", $all_client_results{write_iops};
printf RESULT_TXT "write_kB_sec=%.2f\n", $all_client_results{write_bw};
printf RESULT_TXT "write_95th_lat_us=%.2f\n", $all_client_results{write_95lat};

printf ITERATION_TXT "%20s%20s%20s%20s%20s%20s%20s%20s%20s%20s\n", "$iteration", "clients",
  "readwrite-IOPS", "readwrite-kB/sec",
  "read-IOPS", "read-kB/sec", "read-95th-lat-ms",
  "write-IOPS", "write-kB/sec", "write-95th-lat-ms";
printf ITERATION_HTML "<pre>%20s%20s%s%20s%20s%20s%20s%20s%20s%20s%20s\n", "$iteration", "clients", "     details",
  "readwrite-IOPS", "readwrite-kB/sec",
  "read-IOPS", "read-kB/sec", "read-95th-lat-ms",
  "write-IOPS", "write-kB/sec", "write-95th-lat-ms";
# the iteration result includes the summed result for the all of the clients, then per-client result
printf ITERATION_TXT "%20s%20s%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f\n", "", "all_clients",
  $all_client_results{readwrite_iops}, $all_client_results{readwrite_bw},
  $all_client_results{read_iops}, $all_client_results{read_bw}, $all_client_results{read_95lat}/$all_client_results{read_95lat_samples}/1000,
  $all_client_results{write_iops}, $all_client_results{write_bw}, $all_client_results{write_95lat}/$all_client_results{write_95lat_samples}/1000;
printf ITERATION_HTML "%20s%20s%s%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f\n", "", "all_clients", "            ",
  $all_client_results{readwrite_iops}, $all_client_results{readwrite_bw},
  $all_client_results{read_iops}, $all_client_results{read_bw}, $all_client_results{read_95lat}/$all_client_results{read_95lat_samples}/1000,
  $all_client_results{write_iops}, $all_client_results{write_bw}, $all_client_results{write_95lat}/$all_client_results{write_95lat_samples}/1000;
foreach $client_name (keys %all_job_results) {
	# here we output the per-client result in the iteration summary
	printf ITERATION_TXT "%20s%20s%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f\n", "", "$client_name",
	  $all_job_results{$client_name}{readwrite_iops}, $all_job_results{$client_name}{readwrite_bw},
	  $all_job_results{$client_name}{read_iops}, $all_job_results{$client_name}{read_bw}, $all_job_results{$client_name}{read_95lat}/$all_job_results{$client_name}{read_95lat_samples}/1000,
	  $all_job_results{$client_name}{write_iops}, $all_job_results{$client_name}{write_bw}, $all_job_results{$client_name}{write_95lat}/$all_job_results{$client_name}{write_95lat_samples}/1000;
	printf ITERATION_HTML "%20s%20s     <a href=./clients/$client_name/>%s</a>%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f\n", "", "$client_name", "details",
	  $all_job_results{$client_name}{readwrite_iops}, $all_job_results{$client_name}{readwrite_bw},
	  $all_job_results{$client_name}{read_iops}, $all_job_results{$client_name}{read_bw}, $all_job_results{$client_name}{read_95lat}/$all_job_results{$client_name}{read_95lat_samples}/1000,
	  $all_job_results{$client_name}{write_iops}, $all_job_results{$client_name}{write_bw}, $all_job_results{$client_name}{write_95lat}/$all_job_results{$client_name}{write_95lat_samples}/1000;

	# the client result summary file includes the summed result for the client, and then a result for each job run
	open(CLIENT_RESULT, ">$dir/clients/$client_name/summary-result.txt") || die "could not open $dir/clients/$client_name/summary-result.txt";
	printf CLIENT_RESULT "%20s%20s%20s%20s%20s%20s%20s%20s%20s%20s\n", "$client_name", "job_name",
	  "readwrite-IOPS", "readwrite-kB/sec",
	  "read-IOPS", "read-kB/sec", "read-95th-lat-ms",
	  "write-IOPS", "write-kB/sec", "write-95th-lat-ms";
	printf CLIENT_RESULT "%20s%20s%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f\n", "", "all_jobs", 
	  $all_job_results{$client_name}{readwrite_iops}, $all_job_results{$client_name}{readwrite_bw},
	  $all_job_results{$client_name}{read_iops}, $all_job_results{$client_name}{read_bw}, $all_job_results{$client_name}{read_95lat}/$all_job_results{$client_name}{read_95lat_samples}/1000,
	  $all_job_results{$client_name}{write_iops}, $all_job_results{$client_name}{write_bw}, $all_job_results{$client_name}{write_95lat}/$all_job_results{$client_name}{write_95lat_samples}/1000;

	my $job_name;
	foreach $job_name (keys %{ $results{$client_name} }) {
		printf CLIENT_RESULT "%20s%20s%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f%20.2f\n", "", "$job_name",
		  $results{$client_name}{$job_name}{readwrite_iops}, $results{$client_name}{$job_name}{readwrite_bw},
		  $results{$client_name}{$job_name}{read_iops}, $results{$client_name}{$job_name}{read_bw}, $results{$client_name}{$job_name}{read_95lat}/1000,
		  $results{$client_name}{$job_name}{write_iops}, $results{$client_name}{$job_name}{write_bw}, $results{$client_name}{$job_name}{write_95lat}/1000;
	}
	close(CLIENT_RESULT);
}
close(RESULT_TXT);
close(ITERATION_TXT);
close(ITERATION_HTML);
