+++ Running test-21 pbench-trafficgen
--help

	trafficgen: you specified an invalid option

	The following options are available:


trafficgen general test options
-------------------------------

--traffic-generator=str
  The traffic generation engine to use (trex-txrx or trex-txrx-profile or moongen-txrx)
  Default is trex-txrx

--devices=str,str
  List of 2 (or more) DPDK devices to use, by PCI location ID (0000:04:00.0,0000:04:00.1)
  This script will attempt to bind the device to vfio-pci kernel module.
  You must ensure your system has IOMMU enabled.  Devices must be listed in increments of 2.

--active-devices=str,str
  List of 2 (ore more) DPDK devices to use as active participants in the test.  These devices
  must be a subset of what is supplied for --devices.  Devices must be listed in increments of 2.

--one-shot
  Run one test for throughput at specified rate

--sniff-runtime=int
  Measurement period in seconds for a "sniff" trial, right before the search trial
  if the sniff test fails, the search trial is skipped and moves on to the next trial
  Default is 

--search-runtime=int
  Measurement period in seconds when searching for max throughput
  Default is 

--validation-runtime=int
  Measurement period in seconds when running final validation or a latency test
  Default is 


      The follwoing options can take 1 or more values and will control how many
      tests will be conducted.  For example, the following options:

        --rates=1,2 --traffic-directions=unidirec,bidirec --max-loss-pcts=0,1
        --frame-sizes=64,256 --nr-flows=1024,65536

      would produce 32 different test permutations

--traffic-profile[s]=FILE[,FILE]
  A list of traffic profiles to load when --traffic-generator=trex-txrx-profile.  The
  profile contains a list of streams, each with fine grained options defined on a per
  stream basis.  See README-trex-txrx-profile.md in the trafficgen distribution for
  documentation on the file format.

--rate[s]=value[,value]]
  A list of packet rates, in millions of packets per second (mpps), unless
  --rate-unit=% is used, where the rate value is interpreted as a percentage
  of line rate for the trasmitting device.

  Only use this option when:
    1) Using the --one-shot option (skip binary search) and only 1 frame size
      For example, you may want to use this when measuring latency for
      10%, 50%, 90% of line rate with 64-byte frames:
      --rates=10%,50%,90% --rate-unit=% --frame-size=64 --one-shot
    2) Performing a binary search, but you want the search to start with a rate
       lower than 100%.  Wen doing this, it is recommended that only 1 frame
       size is used:
       --rate=50% --rate-unit=% --frame-size=64

--traffic-direction[s]=str[,str]
  A list of one or more: unidirectional, revunidirectional, or bidirectional
  (default bidirectional)
  unidirectional: packets will Tx out the 1st device and Rx in the 2nd device
  revunidirectional: packets will Tx out the 2nd device and RX in the 1st device
  bidirectional: packets will Tx out the both devices and Rx in both devices

--max-loss-pct[s]=fl,[fl]
  A list of maximum allowed percentage of dropped frames, used for binary search
  Default is 0.002

--frame-sizes=str[,str]
  A list of Ethernet frame sizes (including CRC) in bytes
  Default is 64

--num-flows=int
  Number of packet flows to run. Default is 1024


trafficgen options that control packet contents
-----------------------------------------------

    The values provided for the following options correspond to the devices
    device list (--devices).  For example

      --devices=0000:04:00.0,0000:04:00.1 --src-ips=10.0.0.1,8.0.0.1

    In the example above, device 0000:04:00.0 would use source IP address 10.0.0.1
    and device 0000:04:00.1 would use source IP adress 8.0.0.1

--src-ports=PORT,PORT
  A list of source ports

--dst-ports=PORT,PORT
  A list of destination ports

--src-macs=MAC,MAC
  A list of two source MAC addresses

--src-ips=IP,IP
  A list of two source IP addresses

--dst-macs=MAC,MAC
  A list of two destination MAC addresses

--dst-ips=IP,IP
  A list of two destination IP addresses

--encap-src-macs=MAC,MAC
  A list of two source MAC addresses for the encapsulated network. Only used in
  conjuction with an overlay network like VxLAN

--encap-src-ips=IP,IP
  A list of two source IP addresses for the encapsulated network.  Only used in
  conjuction with an overlay network like VxLAN.

--encap-dst-macs=MAC,MAC
  A list of two destination MAC addresses for the encapsulated network.  Only
  used on conjuction with an overlay network like VxLAN.

--encap-dst-ips=IP,IP
  A list of two destination IP addresses for the encapsulated network.  Only
  used on conjuction with an overlay network like VxLAN.

--vlan-ids=[int][,int]
  If a value is provided, the corresponding device will use a VLAN tag when
  transmitting and expect received packets to also have the VLAN tag

--overlay-ids=[int][,int]
  If a value is provided, the corresponding device will encapsulate the packet
  and use VNI = value provided when transmitting packets.  Received packets
  for the this device are expected to be encapsulated and use same VNI.  This
  option must be used with --overlay-type option

--overlay-types
  Per device specification of overlay network type, can be "none", or skipped,
  or "VxLAN".  If "VxLAN" is used, --overlay-ids must also be used as well
  as --encap-[src|dst]-[macs|ips] options.  When using an overlay, the
  device-under-test must have the matching configuration.  For example, if
  --overlay-types=none,vxlan is used, the device-under-test would receive
  non-overlay packets on its first device, encapsulate the packets, and send
  the packet out the second device.  Packets received by the second device are
  expected to already be encapsulated, and the device-under-test would
  decapsulate them and send them out the first device.

--flow-mods=str[,str] (default is src-ip,dst-ip,src-mac,dst-mac)
  A list of IP packet header fields which are used to implement unique flows.
  All fields listed here are changed in unison, for example if "src-ip,src-mac"
  are used, the first packet will have a source IP of 192.168.0.X and source MAC
  of 01:02:03:04:X:06.  The second packet will have a source IP of
  192.168.0.(X+1) and source MAC of 01:02:03:04:(X+1):06. The list of available
  flow mods are:

    src-ip,dst-ip,src-mac,dst-mac,src-port,dst-port,encap-src-mac,encap-dst-mac,
    encap-src-ip,encap-dst-ip,protocol,none

  Note that none is a special flow mod option.  It's presence will override and
  disable all other specified flow mods
  Note that the encap-* flow mods are only viable for overlay network tests like
  VxLAN, and alter the inner packet header.
  The maximum number of unique flows may be limited by the traffic-generator used.
  For trex-txrx, it is 16.7 million.  Trex-txrx modifies the 2nd, 3rd, and 4th
  octet in the IP addresses and the 3rd, 4th, and 5th octet in the MAC addresses
  When using source or destination ports numbers, the range is limited to 1-32768
  and higher flow counts will "roll" over back to 1

--packet-protocol=str (default is UDP)
  The protocol to use when generating IP packets.  Available options are TCP or
  UDP.

--trex-use-ht
  Should TRex be allowed to use Hyperthreading siblings.  Defaults to disabled.
--trex-use-l2
  Should TRex be configured in L2 mode instead of L3.  Defaults to disabled.


trafficgen debug options
-----------------------------------------------

--skip-trex-install
  Do no install TRex server process (assumes you have one) installed already

--skip-trex-server
  Do no kill existing or start a new TRex server process (assumes you have one)
  running already)

--skip-git-pull
  Do not call git pull on the lua-trafficgen repo if it already exists


options common in most pbench benchmark scripts
-----------------------------------------------

--config=str
  Name of the test config (i.e. jumbo_frames_and_network_throughput)

--samples=int
  The number of times each different test is run (to compute average)

--max-failures=int
  The maximm number of failures to get below stddev

--max-stddev=int
  The maximm percent stddev allowed to pass

--postprocess-only=y|n
  Don't run the benchmark, but postprocess data from previous test

--run-dir=str
  Optionally specify what directory should be used (usually only used if
  postprocess-only=y)

--start-iteration-num=int
  Optionally skip the first (n-1) tests

--tool-group=str
  Start/stop/post-process tools using this group

--pre-sample-cmd=str
  run this command before executing each test sample
--- Finished test-21 pbench-trafficgen (status=1)
+++ pbench tree state
/var/tmp/pbench-test-bench/pbench
/var/tmp/pbench-test-bench/pbench/samples
/var/tmp/pbench-test-bench/pbench/tmp
/var/tmp/pbench-test-bench/pbench/tools-default
/var/tmp/pbench-test-bench/pbench/tools-default/mpstat
/var/tmp/pbench-test-bench/pbench/tools-default/sar
--- pbench tree state
+++ pbench.log file contents
grep: /var/tmp/pbench-test-bench/pbench/pbench.log: No such file or directory
--- pbench.log file contents
+++ test-execution.log file contents
--- test-execution.log file contents
